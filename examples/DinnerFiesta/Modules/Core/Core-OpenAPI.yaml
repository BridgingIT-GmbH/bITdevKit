openapi: 3.0.0
info:
  title: DinnerFiesta Core API
  version: 1.0.0
servers:
  - url: https://localhost:5001

paths:
  /api/core/echo:
    summary: This resource represents an echo in the module
    get:
      summary: Gets an echo
      tags:
        - core/dummy
      operationId: Core_Echo-Get
      responses:
        200:
          description: Resource request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultModel'
              example:
                messages:
                  - echo
                isSuccess: true

  # Bill =============================================================

  # Guest ============================================================

  # Host =============================================================
  /api/core/hosts/{hostId}:
    get:
      tags:
        - core/hosts
      operationId: Core_HostFindOne
      parameters:
        - name: hostId
          in: path
          description: Host Id
          required: true
          schema:
            type: string
            example: 2af8160a-6eb5-fb82-c731-8baadc602ed6
            nullable: false
      responses:
        200:
          description: Resource request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostModel'
              # examples:
              #   objectExample:
              #     $ref: '#/components/examples/HostResponseExample'
        400:
          description: Resource request was invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetailsModel'
        401:
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        404:
          description: Resource was not found.
        500:
          description: Unexpected error.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'

    put:
      tags:
        - core/hosts
      operationId: Core_HostUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HostModel'
        description: The Host to update
        required: true
      responses:
        201:
          description: Resource was updaed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostModel'
              # examples:
              #   objectExample:
              #     $ref: '#/components/examples/HostResponseExample'
        400:
          description: Resource request was invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetailsModel'
        401:
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        404:
          description: Resource was not found.
        500:
          description: Unexpected error.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'

  /api/core/hosts:
    get:
      tags:
        - core/hosts
      operationId: Core_HostFindAll
      responses:
        200:
          description: Resource request was successful.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HostModel'
              # examples:
              #   objectExample:
              #     $ref: '#/components/examples/HostResponseExamples'
        400:
          description: Resource request was invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetailsModel'
        401:
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        500:
          description: Unexpected error.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'

    post:
      tags:
        - core/hosts
      operationId: Core_HostCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HostModel'
        description: The Host to add
        required: true
      responses:
        201:
          description: Resource was created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostModel'
              # examples:
              #   objectExample:
              #     $ref: '#/components/examples/HostResponseExample'
        400:
          description: Resource request was invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetailsModel'
        401:
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        404:
          description: Resource was not found.
        500:
          description: Unexpected error.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'

  # Dinner ===========================================================
  /api/core/hosts/{hostId}/dinners/{dinnerId}:
    get:
      tags:
        - core/dinners
      operationId: Core_DinnerFindOneForHost
      parameters:
        - name: hostId
          in: path
          description: Host Id
          required: true
          schema:
            type: string
            example: 2af8160a-6eb5-fb82-c731-8baadc602ed6
            nullable: false
        - name: dinnerId
          in: path
          description: Dinner Id
          required: true
          schema:
            type: string
            example: 85c2b996-fc0e-76a7-c5e2-3d83ebf73c8e
            nullable: false
      responses:
        200:
          description: Resource request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DinnerModel'
              examples:
                objectExample:
                  $ref: '#/components/examples/DinnerResponseExample'
        400:
          description: Resource request was invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetailsModel'
        401:
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        404:
          description: Resource was not found.
        500:
          description: Unexpected error.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'

  /api/core/hosts/{hostId}/dinners:
    summary: TODO
    get:
      tags:
        - core/dinners
      operationId: Core_DinnerFindAllForHost
      parameters:
        - name: hostId
          in: path
          description: Host Id
          required: true
          schema:
            type: string
            example: 2af8160a-6eb5-fb82-c731-8baadc602ed6
            nullable: false
      responses:
        200:
          description: Resource request was successful.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DinnerModel'
              examples:
                objectExample:
                  $ref: '#/components/examples/DinnerResponseExamples'
        400:
          description: Resource request was invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetailsModel'
        401:
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        500:
          description: Unexpected error.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'

    post:
      tags:
        - core/dinners
      operationId: Core_DinnerCreate
      parameters:
        - name: hostId
          in: path
          description: Host Id
          required: true
          schema:
            type: string
            example: 2af8160a-6eb5-fb82-c731-8baadc602ed6
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DinnerModel'
        description: The Dinner to add
        required: true
      responses:
        201:
          description: Resource was created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DinnerModel'
              examples:
                objectExample:
                  $ref: '#/components/examples/DinnerResponseExample'
        400:
          description: Resource request was invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetailsModel'
        401:
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        404:
          description: Resource was not found.
        500:
          description: Unexpected error.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'

  # Menu =============================================================
  /api/core/hosts/{hostId}/menus/{menuId}:
    summary: TODO
    get:
      tags:
        - core/menus
      operationId: Core_MenuFindOneForHost
      parameters:
        - name: hostId
          in: path
          description: Host Id
          required: true
          schema:
            type: string
            example: 2af8160a-6eb5-fb82-c731-8baadc602ed6
            nullable: false
        - name: menuId
          in: path
          description: Menu Id
          required: true
          schema:
            type: string
            example: a5f2e140-6907-86b2-8534-a5ff96897c77
            nullable: false
      responses:
        200:
          description: Resource request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuModel'
              examples:
                objectExample:
                  $ref: '#/components/examples/MenuResponseExample'
        400:
          description: Resource request was invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetailsModel'
        401:
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        404:
          description: Resource was not found.
        500:
          description: Unexpected error.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'

  /api/core/hosts/{hostId}/menus:
    summary: TODO
    get:
      tags:
        - core/menus
      operationId: Core_MenuFindAllForHost
      parameters:
        - name: hostId
          in: path
          description: Host Id
          required: true
          schema:
            type: string
            example: 2af8160a-6eb5-fb82-c731-8baadc602ed6
            nullable: false
      responses:
        200:
          description: Resource request was successful.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MenuModel'
              examples:
                objectExample:
                  $ref: '#/components/examples/MenuResponseExamples'
        400:
          description: Resource request was invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetailsModel'
        401:
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        500:
          description: Unexpected error.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'

    post:
      tags:
        - core/menus
      operationId: Core_MenuCreate
      parameters:
        - name: hostId
          in: path
          description: Host Id
          required: true
          schema:
            type: string
            example: 2af8160a-6eb5-fb82-c731-8baadc602ed6
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuModel'
        description: The Menu to add
        required: true
      responses:
        201:
          description: Resource was created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuModel'
              examples:
                 objectExample:
                  $ref: '#/components/examples/MenuResponseExample'
        400:
          description: Resource request was invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetailsModel'
        401:
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        404:
          description: Resource was not found.
        500:
          description: Unexpected error.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'

  # MenuReview =======================================================

  # User =============================================================
  /api/core/users/{userId}:
    summary: TODO
    get:
      tags:
        - core/users
      operationId: Core_UserFindOne
      parameters:
        - name: userId
          in: path
          description: User Id
          required: true
          schema:
            type: string
            example: f5d87eba-c374-45db-a5e4-7b43fd25e7bf
            nullable: false
      responses:
        200:
          description: Resource request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserModel'
              # examples:
              #   objectExample:
              #     $ref: '#/components/examples/UserResponseExample'
        400:
          description: Resource request was invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetailsModel'
        401:
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        404:
          description: Resource was not found.
        500:
          description: Unexpected error.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'

  /api/core/users:
    summary: TODO
    get:
      tags:
        - core/hosts
      operationId: Core_UserFindAll
      responses:
        200:
          description: Resource request was successful.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserModel'
              # examples:
              #   objectExample:
              #     $ref: '#/components/examples/UserResponseExamples'
        400:
          description: Resource request was invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetailsModel'
        401:
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        500:
          description: Unexpected error.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'

    post:
      tags:
        - core/hosts
      operationId: Core_UserCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserModel'
        description: The User to add
        required: true
      responses:
        201:
          description: Resource was created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserModel'
              # examples:
              #   objectExample:
              #     $ref: '#/components/examples/UserResponseExample'
        400:
          description: Resource request was invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetailsModel'
        401:
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'
        404:
          description: Resource was not found.
        500:
          description: Unexpected error.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailsModel'

components:
  schemas:
    ResultModel:
      type: object
      additionalProperties: false
      properties:
        messages:
          type: array
          nullable: true
          items:
            type: string
        isSuccess:
          type: boolean
    ProblemDetailsModel:
      type: object
      additionalProperties: false
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
    ValidationProblemDetailsModel:
      allOf:
        - $ref: '#/components/schemas/ProblemDetailsModel'
        - type: object
          additionalProperties: false
          properties:
            errors:
              type: object
              additionalProperties:
                type: array
                items:
                  type: string

    # Bill =======================================================

    # Dinner =====================================================
    DinnerModel:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        schedule:
          type: object
          nullable: true
          $ref: '#/components/schemas/DinnerScheduleModel'
        maxGuests:
          type: integer
          minimum: 1
        isPublic:
          type: boolean
        price:
          type: object
          nullable: true
          $ref: '#/components/schemas/PriceModel'
        hostId:
          type: string
        menuId:
          type: string
        imageUrl:
          type: string
        status:
          type: string
        location:
          type: object
          nullable: true
          $ref: '#/components/schemas/DinnerLocationModel'
    DinnerScheduleModel:
      type: object
      properties:
        startDateTime:
          type: string
          format: date-time
        endDateTime:
          type: string
          format: date-time
    PriceModel:
      type: object
      properties:
        amount:
          type: number
          format: decimal
          minimum: 0
        currency:
          type: string
    DinnerLocationModel:
      type: object
      properties:
        name:
          type: string
        addressLine1:
          type: string
        addressLine2:
          type: string
        postalCode:
          type: string
        city:
          type: string
        country:
          type: string
        websiteUrl:
          type: string
        latitude:
          type: number
        longitude:
          type: number

    # Guest =======================================================

    # Host ========================================================
    HostModel:
      type: object
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        profileImage:
          type: string
        userId:
          type: string

    # Menu =======================================================
    MenuModel:
      type: object
      properties:
        id:
          type: string
        hostId:
          type: string
        name:
          type: string
        description:
          type: string
        averageRating:
          type: number
          minimum: 0
        sections:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/MenuSectionModel'
    MenuSectionModel:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        items:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/MenuSectionItemModel'
    MenuSectionItemModel:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string

    # MenuReview =================================================

    # User =======================================================
    UserModel:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
        profileImage:
          type: string

  examples:
    MenuResponseExample:
      summary: A sample Menu
      value:
        id: f5d87eba-c374-45db-a5e4-7b43fd25e7bf
        name: Sample Menu 001
        description: Duo aliquyam sea aliquyam voluptua elitr eum et duo lorem adipiscing amet. Magna invidunt sanctus ex consectetuer aliquyam. Vero duo sed justo magna magna ex elitr stet lorem ut elitr accusam eirmod diam sed dolore sed magna. Accusam lorem et molestie sanctus sed luptatum et ipsum duis et.
    MenuResponseExamples:
      summary: A few sample Menus
      value:
        - id: f5d87eba-c374-45db-a5e4-7b43fd25e7bf
          name: Sample Menu 001
          description: Duo aliquyam sea aliquyam voluptua elitr eum et duo lorem adipiscing amet. Magna invidunt sanctus ex consectetuer aliquyam. Vero duo sed justo magna magna ex elitr stet lorem ut elitr accusam eirmod diam sed dolore sed magna. Accusam lorem et molestie sanctus sed luptatum et ipsum duis et.

    DinnerResponseExample:
      summary: A sample Dinner
      value:
        id: 85c2b996-fc0e-76a7-c5e2-3d83ebf73c8e
        name: Sample Dinner 001
        description: Duo aliquyam sea aliquyam voluptua elitr eum et duo lorem adipiscing amet. Magna invidunt sanctus ex consectetuer aliquyam. Vero duo sed justo magna magna ex elitr stet lorem ut elitr accusam eirmod diam sed dolore sed magna. Accusam lorem et molestie sanctus sed luptatum et ipsum duis et.
        schedule:
          startDateTime: 2023-05-15T19:00:00.0000000Z
          endDateTime: 2023-05-15T22:00:00.0000000Z
        startedDateTime:
        endedDateTime:
        status: Ended
        maxGuests: 10
        isPublic: true
        price:
          amount: 250.0
          currency: USD
        menuId: 1
        hostId: 2af8160a-6eb5-fb82-c731-8baadc602ed6
        imageUrl: https://example.com/dinner.jpg
        location:
          name: My House
          addressLine1: 123 Main St
          addressLine2:
          postalCode: 12345
          city: Anytown
          country: USA
          latitude: 37.7749
          longitude: -122.4194
    DinnerResponseExamples:
      summary: A few sample Dinners
      value:
        - id: 85c2b996-fc0e-76a7-c5e2-3d83ebf73c8e
          name: Sample Dinner 001
          description: Duo aliquyam sea aliquyam voluptua elitr eum et duo lorem adipiscing amet. Magna invidunt sanctus ex consectetuer aliquyam. Vero duo sed justo magna magna ex elitr stet lorem ut elitr accusam eirmod diam sed dolore sed magna. Accusam lorem et molestie sanctus sed luptatum et ipsum duis et.
          schedule:
            startDateTime: 2023-05-15T19:00:00.0000000Z
            endDateTime: 2023-05-15T22:00:00.0000000Z
          startedDateTime:
          endedDateTime:
          status: Ended
          maxGuests: 10
          isPublic: true
          price:
            amount: 250.0
            currency: USD
          menuId: 1
          hostId: 2af8160a-6eb5-fb82-c731-8baadc602ed6
          imageUrl: https://example.com/dinner.jpg
          location:
            name: My House
            addressLine1: 123 Main St
            addressLine2:
            postalCode: 12345
            city: Anytown
            country: USA
            latitude: 37.7749
            longitude: -122.4194

  #  CartDto:
  #    summary: A sample cart
  #    value:
  #      id: 85c2b996-fc0e-76a7-c5e2-3d83ebf73c8e
  #      identity: f5d87eba-c374-45db-a5e4-7b43fd25e7bf
  #      totalPrice: 99.99
  #      items:
  #      - id: a1e3b861-5b32-4e7a-8c86-549cc683e5c1
  #        sku: SKU0123456789
  #        name: Product X
  #        quantity: 3
  #        unitPrice: 3.99
  #        totalPrice: 11.97
  #      - id: a602d155-da1e-48b9-af53-cf2bbdae25a9
  #        sku: SKU9876543210
  #        name: Product Y
  #        quantity: 2
  #        unitPrice: 2.99
  #        totalPrice: 5.98

  # securitySchemes:
  #   JWT:
  #     type: apiKey
  #     description: "Send the JWT token in this format - Request Header: Authorization=Bearer [access_token]"
  #     name: Authorization
  #     in: header

#security:
#  # - JWT: []
#  - Permissions.Carts.Add: []
#  - Permissions.Carts.Update: []
#  - Permissions.Carts.Delete: []