// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;

#nullable disable

namespace BridgingIT.DevKit.Examples.DinnerFiesta.Modules.Core.Infrastructure.EntityFramework.Migrations
{
    [DbContext(typeof(CoreDbContext))]
    partial class CoreDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("core")
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BridgingIT.DevKit.Examples.DinnerFiesta.Modules.Core.Domain.Bill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DinnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GuestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("HostId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Bills", "core");
                });

            modelBuilder.Entity("BridgingIT.DevKit.Examples.DinnerFiesta.Modules.Core.Domain.Dinner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTimeOffset?>("EndedDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("HostId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit");

                    b.Property<int>("MaxGuests")
                        .HasColumnType("int");

                    b.Property<Guid?>("MenuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTimeOffset?>("StartedDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Dinners", "core");
                });

            modelBuilder.Entity("BridgingIT.DevKit.Examples.DinnerFiesta.Modules.Core.Domain.Guest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProfileImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Guests", "core");
                });

            modelBuilder.Entity("BridgingIT.DevKit.Examples.DinnerFiesta.Modules.Core.Domain.Host", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProfileImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Hosts", "core");
                });

            modelBuilder.Entity("BridgingIT.DevKit.Examples.DinnerFiesta.Modules.Core.Domain.Menu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<Guid?>("HostId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.ToTable("Menus", "core");
                });

            modelBuilder.Entity("BridgingIT.DevKit.Examples.DinnerFiesta.Modules.Core.Domain.MenuReview", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<Guid?>("DinnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GuestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("HostId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MenuId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("MenuReviews", "core");
                });

            modelBuilder.Entity("BridgingIT.DevKit.Examples.DinnerFiesta.Modules.Core.Domain.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Users", "core");
                });

            modelBuilder.Entity("BridgingIT.DevKit.Infrastructure.EntityFramework.OutboxDomainEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContentHash")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("EventId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("ProcessedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("PropertiesJson")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Properties");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedDate");

                    b.HasIndex("EventId");

                    b.HasIndex("ProcessedDate");

                    b.HasIndex("Type");

                    b.ToTable("__Outbox_DomainEvents", "core");
                });

            modelBuilder.Entity("BridgingIT.DevKit.Infrastructure.EntityFramework.OutboxMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContentHash")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MessageId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("ProcessedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("PropertiesJson")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Properties");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedDate");

                    b.HasIndex("MessageId");

                    b.HasIndex("ProcessedDate");

                    b.HasIndex("Type");

                    b.ToTable("__Outbox_Messages", "core");
                });

            modelBuilder.Entity("BridgingIT.DevKit.Infrastructure.EntityFramework.StorageDocument", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContentHash")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("PartitionKey")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("PropertiesJson")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Properties");

                    b.Property<string>("RowKey")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<DateTimeOffset?>("UpdatedDate")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("PartitionKey");

                    b.HasIndex("RowKey");

                    b.HasIndex("Type");

                    b.ToTable("__Storage_Documents", "core");
                });

            modelBuilder.Entity("BridgingIT.DevKit.Examples.DinnerFiesta.Modules.Core.Domain.Bill", b =>
                {
                    b.OwnsOne("BridgingIT.DevKit.Domain.Model.AuditState", "AuditState", b1 =>
                        {
                            b1.Property<Guid>("BillId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("CreatedBy")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<DateTimeOffset>("CreatedDate")
                                .HasColumnType("datetimeoffset");

                            b1.Property<string>("CreatedDescription")
                                .HasMaxLength(1024)
                                .HasColumnType("nvarchar(1024)");

                            b1.Property<bool?>("Deactivated")
                                .HasColumnType("bit");

                            b1.Property<string>("DeactivatedBy")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<DateTimeOffset?>("DeactivatedDate")
                                .HasColumnType("datetimeoffset");

                            b1.Property<string>("DeactivatedDescription")
                                .HasMaxLength(1024)
                                .HasColumnType("nvarchar(1024)");

                            b1.Property<string>("DeactivatedReasons")
                                .HasMaxLength(8192)
                                .HasColumnType("nvarchar(max)");

                            b1.Property<bool?>("Deleted")
                                .HasColumnType("bit");

                            b1.Property<string>("DeletedBy")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<DateTimeOffset?>("DeletedDate")
                                .HasColumnType("datetimeoffset");

                            b1.Property<string>("DeletedDescription")
                                .HasMaxLength(1024)
                                .HasColumnType("nvarchar(1024)");

                            b1.Property<string>("DeletedReason")
                                .HasMaxLength(1024)
                                .HasColumnType("nvarchar(1024)");

                            b1.Property<string>("UpdatedBy")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<DateTimeOffset?>("UpdatedDate")
                                .HasColumnType("datetimeoffset");

                            b1.Property<string>("UpdatedDescription")
                                .HasMaxLength(1024)
                                .HasColumnType("nvarchar(1024)");

                            b1.Property<string>("UpdatedReasons")
                                .HasMaxLength(8192)
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("BillId");

                            b1.ToTable("Bills", "core");

                            b1.WithOwner()
                                .HasForeignKey("BillId");
                        });

                    b.OwnsOne("BridgingIT.DevKit.Examples.DinnerFiesta.Modules.Core.Domain.Price", "Price", b1 =>
                        {
                            b1.Property<Guid>("BillId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(5,2)");

                            b1.Property<string>("Currency")
                                .HasMaxLength(8)
                                .HasColumnType("nvarchar(8)");

                            b1.HasKey("BillId");

                            b1.ToTable("Bills", "core");

                            b1.WithOwner()
                                .HasForeignKey("BillId");
                        });

                    b.Navigation("AuditState");

                    b.Navigation("Price");
                });

            modelBuilder.Entity("BridgingIT.DevKit.Examples.DinnerFiesta.Modules.Core.Domain.Dinner", b =>
                {
                    b.OwnsOne("BridgingIT.DevKit.Domain.Model.AuditState", "AuditState", b1 =>
                        {
                            b1.Property<Guid>("DinnerId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("CreatedBy")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<DateTimeOffset>("CreatedDate")
                                .HasColumnType("datetimeoffset");

                            b1.Property<string>("CreatedDescription")
                                .HasMaxLength(1024)
                                .HasColumnType("nvarchar(1024)");

                            b1.Property<bool?>("Deactivated")
                                .HasColumnType("bit");

                            b1.Property<string>("DeactivatedBy")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<DateTimeOffset?>("DeactivatedDate")
                                .HasColumnType("datetimeoffset");

                            b1.Property<string>("DeactivatedDescription")
                                .HasMaxLength(1024)
                                .HasColumnType("nvarchar(1024)");

                            b1.Property<string>("DeactivatedReasons")
                                .HasMaxLength(8192)
                                .HasColumnType("nvarchar(max)");

                            b1.Property<bool?>("Deleted")
                                .HasColumnType("bit");

                            b1.Property<string>("DeletedBy")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<DateTimeOffset?>("DeletedDate")
                                .HasColumnType("datetimeoffset");

                            b1.Property<string>("DeletedDescription")
                                .HasMaxLength(1024)
                                .HasColumnType("nvarchar(1024)");

                            b1.Property<string>("DeletedReason")
                                .HasMaxLength(1024)
                                .HasColumnType("nvarchar(1024)");

                            b1.Property<string>("UpdatedBy")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<DateTimeOffset?>("UpdatedDate")
                                .HasColumnType("datetimeoffset");

                            b1.Property<string>("UpdatedDescription")
                                .HasMaxLength(1024)
                                .HasColumnType("nvarchar(1024)");

                            b1.Property<string>("UpdatedReasons")
                                .HasMaxLength(8192)
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("DinnerId");

                            b1.ToTable("Dinners", "core");

                            b1.WithOwner()
                                .HasForeignKey("DinnerId");
                        });

                    b.OwnsOne("BridgingIT.DevKit.Examples.DinnerFiesta.Modules.Core.Domain.Price", "Price", b1 =>
                        {
                            b1.Property<Guid>("DinnerId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(5,2)");

                            b1.Property<string>("Currency")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("DinnerId");

                            b1.ToTable("Dinners", "core");

                            b1.WithOwner()
                                .HasForeignKey("DinnerId");
                        });

                    b.OwnsOne("BridgingIT.DevKit.Examples.DinnerFiesta.Modules.Core.Domain.DinnerLocation", "Location", b1 =>
                        {
                            b1.Property<Guid>("DinnerId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("AddressLine1")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<string>("AddressLine2")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<string>("City")
                                .HasMaxLength(128)
                                .HasColumnType("nvarchar(128)");

                            b1.Property<string>("Country")
                                .HasMaxLength(128)
                                .HasColumnType("nvarchar(128)");

                            b1.Property<decimal?>("Latitude")
                                .HasColumnType("decimal(10,7)");

                            b1.Property<decimal?>("Longitude")
                                .HasColumnType("decimal(10,7)");

                            b1.Property<string>("Name")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("PostalCode")
                                .HasMaxLength(16)
                                .HasColumnType("nvarchar(16)");

                            b1.Property<string>("WebsiteUrl")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("DinnerId");

                            b1.ToTable("Dinners", "core");

                            b1.WithOwner()
                                .HasForeignKey("DinnerId");
                        });

                    b.OwnsMany("BridgingIT.DevKit.Examples.DinnerFiesta.Modules.Core.Domain.DinnerReservation", "Reservations", b1 =>
                        {
                            b1.Property<Guid>("DinnerId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTimeOffset?>("ArrivalDateTime")
                                .HasColumnType("datetimeoffset");

                            b1.Property<Guid?>("BillId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("GuestCount")
                                .HasColumnType("int");

                            b1.Property<Guid?>("GuestId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int?>("Status")
                                .HasColumnType("int");

                            b1.HasKey("DinnerId", "Id");

                            b1.ToTable("DinnerReservations", "core");

                            b1.WithOwner()
                                .HasForeignKey("DinnerId");

                            b1.OwnsOne("BridgingIT.DevKit.Domain.Model.AuditState", "AuditState", b2 =>
                                {
                                    b2.Property<Guid>("DinnerReservationDinnerId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<Guid>("DinnerReservationId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<string>("CreatedBy")
                                        .HasMaxLength(256)
                                        .HasColumnType("nvarchar(256)");

                                    b2.Property<DateTimeOffset>("CreatedDate")
                                        .HasColumnType("datetimeoffset");

                                    b2.Property<string>("CreatedDescription")
                                        .HasMaxLength(1024)
                                        .HasColumnType("nvarchar(1024)");

                                    b2.Property<bool?>("Deactivated")
                                        .HasColumnType("bit");

                                    b2.Property<string>("DeactivatedBy")
                                        .HasMaxLength(256)
                                        .HasColumnType("nvarchar(256)");

                                    b2.Property<DateTimeOffset?>("DeactivatedDate")
                                        .HasColumnType("datetimeoffset");

                                    b2.Property<string>("DeactivatedDescription")
                                        .HasMaxLength(1024)
                                        .HasColumnType("nvarchar(1024)");

                                    b2.Property<string>("DeactivatedReasons")
                                        .HasMaxLength(8192)
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<bool?>("Deleted")
                                        .HasColumnType("bit");

                                    b2.Property<string>("DeletedBy")
                                        .HasMaxLength(256)
                                        .HasColumnType("nvarchar(256)");

                                    b2.Property<DateTimeOffset?>("DeletedDate")
                                        .HasColumnType("datetimeoffset");

                                    b2.Property<string>("DeletedDescription")
                                        .HasMaxLength(1024)
                                        .HasColumnType("nvarchar(1024)");

                                    b2.Property<string>("DeletedReason")
                                        .HasMaxLength(1024)
                                        .HasColumnType("nvarchar(1024)");

                                    b2.Property<string>("UpdatedBy")
                                        .HasMaxLength(256)
                                        .HasColumnType("nvarchar(256)");

                                    b2.Property<DateTimeOffset?>("UpdatedDate")
                                        .HasColumnType("datetimeoffset");

                                    b2.Property<string>("UpdatedDescription")
                                        .HasMaxLength(1024)
                                        .HasColumnType("nvarchar(1024)");

                                    b2.Property<string>("UpdatedReasons")
                                        .HasMaxLength(8192)
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("DinnerReservationDinnerId", "DinnerReservationId");

                                    b2.ToTable("DinnerReservations", "core");

                                    b2.WithOwner()
                                        .HasForeignKey("DinnerReservationDinnerId", "DinnerReservationId");
                                });

                            b1.Navigation("AuditState");
                        });

                    b.OwnsOne("BridgingIT.DevKit.Examples.DinnerFiesta.Modules.Core.Domain.DinnerSchedule", "Schedule", b1 =>
                        {
                            b1.Property<Guid>("DinnerId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTimeOffset>("EndDateTime")
                                .HasColumnType("datetimeoffset");

                            b1.Property<DateTimeOffset>("StartDateTime")
                                .HasColumnType("datetimeoffset");

                            b1.HasKey("DinnerId");

                            b1.ToTable("Dinners", "core");

                            b1.WithOwner()
                                .HasForeignKey("DinnerId");
                        });

                    b.Navigation("AuditState");

                    b.Navigation("Location");

                    b.Navigation("Price");

                    b.Navigation("Reservations");

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("BridgingIT.DevKit.Examples.DinnerFiesta.Modules.Core.Domain.Guest", b =>
                {
                    b.OwnsMany("BridgingIT.DevKit.Examples.DinnerFiesta.Modules.Core.Domain.BillId", "BillIds", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<Guid>("GuestId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("Value")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("BillId");

                            b1.HasKey("Id");

                            b1.HasIndex("GuestId");

                            b1.ToTable("GuestBillIds", "core");

                            //b1.HasDiscriminator().HasValue("BillId");

                            b1.WithOwner()
                                .HasForeignKey("GuestId");
                        });

                    b.OwnsOne("BridgingIT.DevKit.Domain.Model.AuditState", "AuditState", b1 =>
                        {
                            b1.Property<Guid>("GuestId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("CreatedBy")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<DateTimeOffset>("CreatedDate")
                                .HasColumnType("datetimeoffset");

                            b1.Property<string>("CreatedDescription")
                                .HasMaxLength(1024)
                                .HasColumnType("nvarchar(1024)");

                            b1.Property<bool?>("Deactivated")
                                .HasColumnType("bit");

                            b1.Property<string>("DeactivatedBy")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<DateTimeOffset?>("DeactivatedDate")
                                .HasColumnType("datetimeoffset");

                            b1.Property<string>("DeactivatedDescription")
                                .HasMaxLength(1024)
                                .HasColumnType("nvarchar(1024)");

                            b1.Property<string>("DeactivatedReasons")
                                .HasMaxLength(8192)
                                .HasColumnType("nvarchar(max)");

                            b1.Property<bool?>("Deleted")
                                .HasColumnType("bit");

                            b1.Property<string>("DeletedBy")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<DateTimeOffset?>("DeletedDate")
                                .HasColumnType("datetimeoffset");

                            b1.Property<string>("DeletedDescription")
                                .HasMaxLength(1024)
                                .HasColumnType("nvarchar(1024)");

                            b1.Property<string>("DeletedReason")
                                .HasMaxLength(1024)
                                .HasColumnType("nvarchar(1024)");

                            b1.Property<string>("UpdatedBy")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<DateTimeOffset?>("UpdatedDate")
                                .HasColumnType("datetimeoffset");

                            b1.Property<string>("UpdatedDescription")
                                .HasMaxLength(1024)
                                .HasColumnType("nvarchar(1024)");

                            b1.Property<string>("UpdatedReasons")
                                .HasMaxLength(8192)
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("GuestId");

                            b1.ToTable("Guests", "core");

                            b1.WithOwner()
                                .HasForeignKey("GuestId");
                        });

                    b.OwnsMany("BridgingIT.DevKit.Examples.DinnerFiesta.Modules.Core.Domain.MenuReviewId", "MenuReviewIds", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<Guid>("GuestId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("Value")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("MenuReviewId");

                            b1.HasKey("Id");

                            b1.HasIndex("GuestId");

                            b1.ToTable("GuestMenuReviewIds", "core");

                            b1.WithOwner()
                                .HasForeignKey("GuestId");
                        });

                    b.OwnsMany("BridgingIT.DevKit.Examples.DinnerFiesta.Modules.Core.Domain.DinnerId", "PastDinnerIds", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<Guid>("GuestId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("Value")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("DinnerId");

                            b1.HasKey("Id");

                            b1.HasIndex("GuestId");

                            b1.ToTable("GuestPastDinnerIds", "core");

                            b1.WithOwner()
                                .HasForeignKey("GuestId");
                        });

                    b.OwnsMany("BridgingIT.DevKit.Examples.DinnerFiesta.Modules.Core.Domain.DinnerId", "PendingDinnerIds", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<Guid>("GuestId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("Value")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("DinnerId");

                            b1.HasKey("Id");

                            b1.HasIndex("GuestId");

                            b1.ToTable("GuestPendingDinnerIds", "core");

                            b1.WithOwner()
                                .HasForeignKey("GuestId");
                        });

                    b.OwnsMany("BridgingIT.DevKit.Examples.DinnerFiesta.Modules.Core.Domain.DinnerId", "UpcomingDinnerIds", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<Guid>("GuestId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("Value")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("DinnerId");

                            b1.HasKey("Id");

                            b1.HasIndex("GuestId");

                            b1.ToTable("GuestUpcomingDinnerIds", "core");

                            b1.WithOwner()
                                .HasForeignKey("GuestId");
                        });

                    b.OwnsMany("BridgingIT.DevKit.Examples.DinnerFiesta.Modules.Core.Domain.GuestRating", "Ratings", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("GuestId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid?>("DinnerId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid?>("HostId")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("Id", "GuestId");

                            b1.HasIndex("GuestId");

                            b1.ToTable("GuestRatings", "core");

                            b1.WithOwner()
                                .HasForeignKey("GuestId");

                            b1.OwnsOne("BridgingIT.DevKit.Domain.Model.AuditState", "AuditState", b2 =>
                                {
                                    b2.Property<Guid>("GuestRatingId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<Guid>("GuestRatingGuestId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<string>("CreatedBy")
                                        .HasMaxLength(256)
                                        .HasColumnType("nvarchar(256)");

                                    b2.Property<DateTimeOffset>("CreatedDate")
                                        .HasColumnType("datetimeoffset");

                                    b2.Property<string>("CreatedDescription")
                                        .HasMaxLength(1024)
                                        .HasColumnType("nvarchar(1024)");

                                    b2.Property<bool?>("Deactivated")
                                        .HasColumnType("bit");

                                    b2.Property<string>("DeactivatedBy")
                                        .HasMaxLength(256)
                                        .HasColumnType("nvarchar(256)");

                                    b2.Property<DateTimeOffset?>("DeactivatedDate")
                                        .HasColumnType("datetimeoffset");

                                    b2.Property<string>("DeactivatedDescription")
                                        .HasMaxLength(1024)
                                        .HasColumnType("nvarchar(1024)");

                                    b2.Property<string>("DeactivatedReasons")
                                        .HasMaxLength(8192)
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<bool?>("Deleted")
                                        .HasColumnType("bit");

                                    b2.Property<string>("DeletedBy")
                                        .HasMaxLength(256)
                                        .HasColumnType("nvarchar(256)");

                                    b2.Property<DateTimeOffset?>("DeletedDate")
                                        .HasColumnType("datetimeoffset");

                                    b2.Property<string>("DeletedDescription")
                                        .HasMaxLength(1024)
                                        .HasColumnType("nvarchar(1024)");

                                    b2.Property<string>("DeletedReason")
                                        .HasMaxLength(1024)
                                        .HasColumnType("nvarchar(1024)");

                                    b2.Property<string>("UpdatedBy")
                                        .HasMaxLength(256)
                                        .HasColumnType("nvarchar(256)");

                                    b2.Property<DateTimeOffset?>("UpdatedDate")
                                        .HasColumnType("datetimeoffset");

                                    b2.Property<string>("UpdatedDescription")
                                        .HasMaxLength(1024)
                                        .HasColumnType("nvarchar(1024)");

                                    b2.Property<string>("UpdatedReasons")
                                        .HasMaxLength(8192)
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("GuestRatingId", "GuestRatingGuestId");

                                    b2.ToTable("GuestRatings", "core");

                                    b2.WithOwner()
                                        .HasForeignKey("GuestRatingId", "GuestRatingGuestId");
                                });

                            b1.OwnsOne("BridgingIT.DevKit.Examples.DinnerFiesta.Modules.Core.Domain.Rating", "Rating", b2 =>
                                {
                                    b2.Property<Guid>("GuestRatingId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<Guid>("GuestRatingGuestId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<int>("Value")
                                        .HasColumnType("int");

                                    b2.HasKey("GuestRatingId", "GuestRatingGuestId");

                                    b2.ToTable("GuestRatings", "core");

                                    b2.WithOwner()
                                        .HasForeignKey("GuestRatingId", "GuestRatingGuestId");
                                });

                            b1.Navigation("AuditState");

                            b1.Navigation("Rating");
                        });

                    b.Navigation("AuditState");

                    b.Navigation("BillIds");

                    b.Navigation("MenuReviewIds");

                    b.Navigation("PastDinnerIds");

                    b.Navigation("PendingDinnerIds");

                    b.Navigation("Ratings");

                    b.Navigation("UpcomingDinnerIds");
                });

            modelBuilder.Entity("BridgingIT.DevKit.Examples.DinnerFiesta.Modules.Core.Domain.Host", b =>
                {
                    b.OwnsOne("BridgingIT.DevKit.Domain.Model.AuditState", "AuditState", b1 =>
                        {
                            b1.Property<Guid>("HostId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("CreatedBy")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<DateTimeOffset>("CreatedDate")
                                .HasColumnType("datetimeoffset");

                            b1.Property<string>("CreatedDescription")
                                .HasMaxLength(1024)
                                .HasColumnType("nvarchar(1024)");

                            b1.Property<bool?>("Deactivated")
                                .HasColumnType("bit");

                            b1.Property<string>("DeactivatedBy")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<DateTimeOffset?>("DeactivatedDate")
                                .HasColumnType("datetimeoffset");

                            b1.Property<string>("DeactivatedDescription")
                                .HasMaxLength(1024)
                                .HasColumnType("nvarchar(1024)");

                            b1.Property<string>("DeactivatedReasons")
                                .HasMaxLength(8192)
                                .HasColumnType("nvarchar(max)");

                            b1.Property<bool?>("Deleted")
                                .HasColumnType("bit");

                            b1.Property<string>("DeletedBy")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<DateTimeOffset?>("DeletedDate")
                                .HasColumnType("datetimeoffset");

                            b1.Property<string>("DeletedDescription")
                                .HasMaxLength(1024)
                                .HasColumnType("nvarchar(1024)");

                            b1.Property<string>("DeletedReason")
                                .HasMaxLength(1024)
                                .HasColumnType("nvarchar(1024)");

                            b1.Property<string>("UpdatedBy")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<DateTimeOffset?>("UpdatedDate")
                                .HasColumnType("datetimeoffset");

                            b1.Property<string>("UpdatedDescription")
                                .HasMaxLength(1024)
                                .HasColumnType("nvarchar(1024)");

                            b1.Property<string>("UpdatedReasons")
                                .HasMaxLength(8192)
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("HostId");

                            b1.ToTable("Hosts", "core");

                            b1.WithOwner()
                                .HasForeignKey("HostId");
                        });

                    b.OwnsOne("BridgingIT.DevKit.Examples.DinnerFiesta.Modules.Core.Domain.AverageRating", "AverageRating", b1 =>
                        {
                            b1.Property<Guid>("HostId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("NumRatings")
                                .HasColumnType("int");

                            b1.Property<double?>("Value")
                                .HasColumnType("float");

                            b1.HasKey("HostId");

                            b1.ToTable("Hosts", "core");

                            b1.WithOwner()
                                .HasForeignKey("HostId");
                        });

                    b.OwnsMany("BridgingIT.DevKit.Examples.DinnerFiesta.Modules.Core.Domain.DinnerId", "DinnerIds", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<Guid>("HostId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("Value")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("HostDinnerId");

                            b1.HasKey("Id");

                            b1.HasIndex("HostId");

                            b1.ToTable("HostDinnerIds", "core");

                            b1.WithOwner()
                                .HasForeignKey("HostId");
                        });

                    b.OwnsMany("BridgingIT.DevKit.Examples.DinnerFiesta.Modules.Core.Domain.MenuId", "MenuIds", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<Guid>("HostId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("Value")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("HostMenuId");

                            b1.HasKey("Id");

                            b1.HasIndex("HostId");

                            b1.ToTable("HostMenuIds", "core");

                            //b1.HasDiscriminator().HasValue("MenuId");

                            b1.WithOwner()
                                .HasForeignKey("HostId");
                        });

                    b.Navigation("AuditState");

                    b.Navigation("AverageRating");

                    b.Navigation("DinnerIds");

                    b.Navigation("MenuIds");
                });

            modelBuilder.Entity("BridgingIT.DevKit.Examples.DinnerFiesta.Modules.Core.Domain.Menu", b =>
                {
                    b.OwnsOne("BridgingIT.DevKit.Domain.Model.AuditState", "AuditState", b1 =>
                        {
                            b1.Property<Guid>("MenuId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("CreatedBy")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<DateTimeOffset>("CreatedDate")
                                .HasColumnType("datetimeoffset");

                            b1.Property<string>("CreatedDescription")
                                .HasMaxLength(1024)
                                .HasColumnType("nvarchar(1024)");

                            b1.Property<bool?>("Deactivated")
                                .HasColumnType("bit");

                            b1.Property<string>("DeactivatedBy")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<DateTimeOffset?>("DeactivatedDate")
                                .HasColumnType("datetimeoffset");

                            b1.Property<string>("DeactivatedDescription")
                                .HasMaxLength(1024)
                                .HasColumnType("nvarchar(1024)");

                            b1.Property<string>("DeactivatedReasons")
                                .HasMaxLength(8192)
                                .HasColumnType("nvarchar(max)");

                            b1.Property<bool?>("Deleted")
                                .HasColumnType("bit");

                            b1.Property<string>("DeletedBy")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<DateTimeOffset?>("DeletedDate")
                                .HasColumnType("datetimeoffset");

                            b1.Property<string>("DeletedDescription")
                                .HasMaxLength(1024)
                                .HasColumnType("nvarchar(1024)");

                            b1.Property<string>("DeletedReason")
                                .HasMaxLength(1024)
                                .HasColumnType("nvarchar(1024)");

                            b1.Property<string>("UpdatedBy")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<DateTimeOffset?>("UpdatedDate")
                                .HasColumnType("datetimeoffset");

                            b1.Property<string>("UpdatedDescription")
                                .HasMaxLength(1024)
                                .HasColumnType("nvarchar(1024)");

                            b1.Property<string>("UpdatedReasons")
                                .HasMaxLength(8192)
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("MenuId");

                            b1.ToTable("Menus", "core");

                            b1.WithOwner()
                                .HasForeignKey("MenuId");
                        });

                    b.OwnsOne("BridgingIT.DevKit.Examples.DinnerFiesta.Modules.Core.Domain.AverageRating", "AverageRating", b1 =>
                        {
                            b1.Property<Guid>("MenuId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("NumRatings")
                                .HasColumnType("int");

                            b1.Property<double?>("Value")
                                .HasColumnType("float");

                            b1.HasKey("MenuId");

                            b1.ToTable("Menus", "core");

                            b1.WithOwner()
                                .HasForeignKey("MenuId");
                        });

                    b.OwnsMany("BridgingIT.DevKit.Examples.DinnerFiesta.Modules.Core.Domain.DinnerId", "DinnerIds", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<Guid>("MenuId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("Value")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("DinnerId");

                            b1.HasKey("Id");

                            b1.HasIndex("MenuId");

                            b1.ToTable("MenuDinnerIds", "core");

                            b1.WithOwner()
                                .HasForeignKey("MenuId");
                        });

                    b.OwnsMany("BridgingIT.DevKit.Examples.DinnerFiesta.Modules.Core.Domain.MenuReviewId", "MenuReviewIds", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<Guid>("MenuId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("Value")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("ReviewId");

                            b1.HasKey("Id");

                            b1.HasIndex("MenuId");

                            b1.ToTable("MenuReviewIds", "core");

                            b1.WithOwner()
                                .HasForeignKey("MenuId");
                        });

                    b.OwnsMany("BridgingIT.DevKit.Examples.DinnerFiesta.Modules.Core.Domain.MenuSection", "Sections", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("MenuId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Description")
                                .HasMaxLength(512)
                                .HasColumnType("nvarchar(512)");

                            b1.Property<string>("Name")
                                .HasMaxLength(128)
                                .HasColumnType("nvarchar(128)");

                            b1.HasKey("Id", "MenuId");

                            b1.HasIndex("MenuId");

                            b1.ToTable("MenuSections", "core");

                            b1.WithOwner()
                                .HasForeignKey("MenuId");

                            b1.OwnsMany("BridgingIT.DevKit.Examples.DinnerFiesta.Modules.Core.Domain.MenuSectionItem", "Items", b2 =>
                                {
                                    b2.Property<Guid>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<Guid>("MenuSectionId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<Guid>("MenuId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<string>("Description")
                                        .IsRequired()
                                        .HasMaxLength(512)
                                        .HasColumnType("nvarchar(512)");

                                    b2.Property<string>("Name")
                                        .IsRequired()
                                        .HasMaxLength(128)
                                        .HasColumnType("nvarchar(128)");

                                    b2.HasKey("Id", "MenuSectionId", "MenuId");

                                    b2.HasIndex("MenuSectionId", "MenuId");

                                    b2.ToTable("MenuSectionItems", "core");

                                    b2.WithOwner()
                                        .HasForeignKey("MenuSectionId", "MenuId");
                                });

                            b1.Navigation("Items");
                        });

                    b.Navigation("AuditState");

                    b.Navigation("AverageRating");

                    b.Navigation("DinnerIds");

                    b.Navigation("MenuReviewIds");

                    b.Navigation("Sections");
                });

            modelBuilder.Entity("BridgingIT.DevKit.Examples.DinnerFiesta.Modules.Core.Domain.MenuReview", b =>
                {
                    b.OwnsOne("BridgingIT.DevKit.Domain.Model.AuditState", "AuditState", b1 =>
                        {
                            b1.Property<Guid>("MenuReviewId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("CreatedBy")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<DateTimeOffset>("CreatedDate")
                                .HasColumnType("datetimeoffset");

                            b1.Property<string>("CreatedDescription")
                                .HasMaxLength(1024)
                                .HasColumnType("nvarchar(1024)");

                            b1.Property<bool?>("Deactivated")
                                .HasColumnType("bit");

                            b1.Property<string>("DeactivatedBy")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<DateTimeOffset?>("DeactivatedDate")
                                .HasColumnType("datetimeoffset");

                            b1.Property<string>("DeactivatedDescription")
                                .HasMaxLength(1024)
                                .HasColumnType("nvarchar(1024)");

                            b1.Property<string>("DeactivatedReasons")
                                .HasMaxLength(8192)
                                .HasColumnType("nvarchar(max)");

                            b1.Property<bool?>("Deleted")
                                .HasColumnType("bit");

                            b1.Property<string>("DeletedBy")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<DateTimeOffset?>("DeletedDate")
                                .HasColumnType("datetimeoffset");

                            b1.Property<string>("DeletedDescription")
                                .HasMaxLength(1024)
                                .HasColumnType("nvarchar(1024)");

                            b1.Property<string>("DeletedReason")
                                .HasMaxLength(1024)
                                .HasColumnType("nvarchar(1024)");

                            b1.Property<string>("UpdatedBy")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<DateTimeOffset?>("UpdatedDate")
                                .HasColumnType("datetimeoffset");

                            b1.Property<string>("UpdatedDescription")
                                .HasMaxLength(1024)
                                .HasColumnType("nvarchar(1024)");

                            b1.Property<string>("UpdatedReasons")
                                .HasMaxLength(8192)
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("MenuReviewId");

                            b1.ToTable("MenuReviews", "core");

                            b1.WithOwner()
                                .HasForeignKey("MenuReviewId");
                        });

                    b.OwnsOne("BridgingIT.DevKit.Examples.DinnerFiesta.Modules.Core.Domain.Rating", "Rating", b1 =>
                        {
                            b1.Property<Guid>("MenuReviewId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Value")
                                .HasColumnType("int");

                            b1.HasKey("MenuReviewId");

                            b1.ToTable("MenuReviews", "core");

                            b1.WithOwner()
                                .HasForeignKey("MenuReviewId");
                        });

                    b.Navigation("AuditState");

                    b.Navigation("Rating");
                });

            modelBuilder.Entity("BridgingIT.DevKit.Examples.DinnerFiesta.Modules.Core.Domain.User", b =>
                {
                    b.OwnsOne("BridgingIT.DevKit.Examples.DinnerFiesta.Modules.Core.Domain.EmailAddress", "Email", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.HasKey("UserId");

                            b1.ToTable("Users", "core");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.OwnsOne("BridgingIT.DevKit.Domain.Model.AuditState", "AuditState", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("CreatedBy")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<DateTimeOffset>("CreatedDate")
                                .HasColumnType("datetimeoffset");

                            b1.Property<string>("CreatedDescription")
                                .HasMaxLength(1024)
                                .HasColumnType("nvarchar(1024)");

                            b1.Property<bool?>("Deactivated")
                                .HasColumnType("bit");

                            b1.Property<string>("DeactivatedBy")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<DateTimeOffset?>("DeactivatedDate")
                                .HasColumnType("datetimeoffset");

                            b1.Property<string>("DeactivatedDescription")
                                .HasMaxLength(1024)
                                .HasColumnType("nvarchar(1024)");

                            b1.Property<string>("DeactivatedReasons")
                                .HasMaxLength(8192)
                                .HasColumnType("nvarchar(max)");

                            b1.Property<bool?>("Deleted")
                                .HasColumnType("bit");

                            b1.Property<string>("DeletedBy")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<DateTimeOffset?>("DeletedDate")
                                .HasColumnType("datetimeoffset");

                            b1.Property<string>("DeletedDescription")
                                .HasMaxLength(1024)
                                .HasColumnType("nvarchar(1024)");

                            b1.Property<string>("DeletedReason")
                                .HasMaxLength(1024)
                                .HasColumnType("nvarchar(1024)");

                            b1.Property<string>("UpdatedBy")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<DateTimeOffset?>("UpdatedDate")
                                .HasColumnType("datetimeoffset");

                            b1.Property<string>("UpdatedDescription")
                                .HasMaxLength(1024)
                                .HasColumnType("nvarchar(1024)");

                            b1.Property<string>("UpdatedReasons")
                                .HasMaxLength(8192)
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("UserId");

                            b1.ToTable("Users", "core");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.Navigation("AuditState");

                    b.Navigation("Email");
                });
#pragma warning restore 612, 618
        }
    }
}
