// <auto-generated />
using System;
using BridgingIT.DevKit.Examples.DinnerFiesta.Modules.Marketing.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BridgingIT.DevKit.Examples.DinnerFiesta.Modules.Marketing.Infrastructure.EntityFramework.Migrations
{
    [DbContext(typeof(MarketingDbContext))]
    [Migration("20231116135054_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("marketing")
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BridgingIT.DevKit.Examples.DinnerFiesta.Modules.Marketing.Domain.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EmailOptOut")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.ToTable("Customers", "marketing");
                });

            modelBuilder.Entity("BridgingIT.DevKit.Examples.DinnerFiesta.Modules.Marketing.Domain.Customer", b =>
                {
                    b.OwnsOne("BridgingIT.DevKit.Domain.Model.AuditState", "AuditState", b1 =>
                        {
                            b1.Property<Guid>("CustomerId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("CreatedBy")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<DateTimeOffset>("CreatedDate")
                                .HasColumnType("datetimeoffset");

                            b1.Property<string>("CreatedDescription")
                                .HasMaxLength(1024)
                                .HasColumnType("nvarchar(1024)");

                            b1.Property<bool?>("Deactivated")
                                .HasColumnType("bit");

                            b1.Property<string>("DeactivatedBy")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<DateTimeOffset?>("DeactivatedDate")
                                .HasColumnType("datetimeoffset");

                            b1.Property<string>("DeactivatedDescription")
                                .HasMaxLength(1024)
                                .HasColumnType("nvarchar(1024)");

                            b1.Property<string>("DeactivatedReasons")
                                .HasMaxLength(8192)
                                .HasColumnType("nvarchar(max)");

                            b1.Property<bool?>("Deleted")
                                .HasColumnType("bit");

                            b1.Property<string>("DeletedBy")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<DateTimeOffset?>("DeletedDate")
                                .HasColumnType("datetimeoffset");

                            b1.Property<string>("DeletedDescription")
                                .HasMaxLength(1024)
                                .HasColumnType("nvarchar(1024)");

                            b1.Property<string>("DeletedReason")
                                .HasMaxLength(1024)
                                .HasColumnType("nvarchar(1024)");

                            b1.Property<string>("UpdatedBy")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<DateTimeOffset?>("UpdatedDate")
                                .HasColumnType("datetimeoffset");

                            b1.Property<string>("UpdatedDescription")
                                .HasMaxLength(1024)
                                .HasColumnType("nvarchar(1024)");

                            b1.Property<string>("UpdatedReasons")
                                .HasMaxLength(8192)
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("CustomerId");

                            b1.ToTable("Customers", "marketing");

                            b1.WithOwner()
                                .HasForeignKey("CustomerId");
                        });

                    b.OwnsOne("BridgingIT.DevKit.Examples.DinnerFiesta.Modules.Marketing.Domain.EmailAddress", "Email", b1 =>
                        {
                            b1.Property<Guid>("CustomerId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.HasKey("CustomerId");

                            b1.HasIndex("Value")
                                .IsUnique()
                                .HasFilter("[Email_Value] IS NOT NULL");

                            b1.ToTable("Customers", "marketing");

                            b1.WithOwner()
                                .HasForeignKey("CustomerId");
                        });

                    b.Navigation("AuditState");

                    b.Navigation("Email");
                });
#pragma warning restore 612, 618
        }
    }
}
