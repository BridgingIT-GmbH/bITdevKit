// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace BridgingIT.DevKit.Examples.DoFiesta.Presentation.Gen.Models
{
    /// <summary>
    /// Represents a single filter criterion for filtering query results
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class FilterCriteria : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>A tree structure containing specification nodes for complex filtering logic</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::BridgingIT.DevKit.Examples.DoFiesta.Presentation.Gen.Models.CompositeSpecification? CompositeSpecification { get; set; }
#nullable restore
#else
        public global::BridgingIT.DevKit.Examples.DoFiesta.Presentation.Gen.Models.CompositeSpecification CompositeSpecification { get; set; }
#endif
        /// <summary>Custom parameters for the filter</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::BridgingIT.DevKit.Examples.DoFiesta.Presentation.Gen.Models.FilterCriteria_customParameters? CustomParameters { get; set; }
#nullable restore
#else
        public global::BridgingIT.DevKit.Examples.DoFiesta.Presentation.Gen.Models.FilterCriteria_customParameters CustomParameters { get; set; }
#endif
        /// <summary>Custom filter type</summary>
        public global::BridgingIT.DevKit.Examples.DoFiesta.Presentation.Gen.Models.FilterCriteria_customType? CustomType { get; set; }
        /// <summary>The field to filter on</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Field { get; set; }
#nullable restore
#else
        public string Field { get; set; }
#endif
        /// <summary>Nested filter criteria</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::BridgingIT.DevKit.Examples.DoFiesta.Presentation.Gen.Models.FilterCriteria>? Filters { get; set; }
#nullable restore
#else
        public List<global::BridgingIT.DevKit.Examples.DoFiesta.Presentation.Gen.Models.FilterCriteria> Filters { get; set; }
#endif
        /// <summary>Logic operator for combining nested filters</summary>
        public global::BridgingIT.DevKit.Examples.DoFiesta.Presentation.Gen.Models.FilterCriteria_logic? Logic { get; set; }
        /// <summary>The operator to use for filtering</summary>
        public global::BridgingIT.DevKit.Examples.DoFiesta.Presentation.Gen.Models.FilterCriteria_operator? Operator { get; set; }
        /// <summary>Arguments for the specification</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public UntypedNode? SpecificationArguments { get; set; }
#nullable restore
#else
        public UntypedNode SpecificationArguments { get; set; }
#endif
        /// <summary>Name of a registered specification</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SpecificationName { get; set; }
#nullable restore
#else
        public string SpecificationName { get; set; }
#endif
        /// <summary>The value to compare against (any type)</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::BridgingIT.DevKit.Examples.DoFiesta.Presentation.Gen.Models.FilterCriteria_value? Value { get; set; }
#nullable restore
#else
        public global::BridgingIT.DevKit.Examples.DoFiesta.Presentation.Gen.Models.FilterCriteria_value Value { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::BridgingIT.DevKit.Examples.DoFiesta.Presentation.Gen.Models.FilterCriteria"/> and sets the default values.
        /// </summary>
        public FilterCriteria()
        {
            AdditionalData = new Dictionary<string, object>();
            CustomType = global::BridgingIT.DevKit.Examples.DoFiesta.Presentation.Gen.Models.FilterCriteria_customType.None;
            Logic = global::BridgingIT.DevKit.Examples.DoFiesta.Presentation.Gen.Models.FilterCriteria_logic.And;
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::BridgingIT.DevKit.Examples.DoFiesta.Presentation.Gen.Models.FilterCriteria"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::BridgingIT.DevKit.Examples.DoFiesta.Presentation.Gen.Models.FilterCriteria CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::BridgingIT.DevKit.Examples.DoFiesta.Presentation.Gen.Models.FilterCriteria();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "compositeSpecification", n => { CompositeSpecification = n.GetObjectValue<global::BridgingIT.DevKit.Examples.DoFiesta.Presentation.Gen.Models.CompositeSpecification>(global::BridgingIT.DevKit.Examples.DoFiesta.Presentation.Gen.Models.CompositeSpecification.CreateFromDiscriminatorValue); } },
                { "customParameters", n => { CustomParameters = n.GetObjectValue<global::BridgingIT.DevKit.Examples.DoFiesta.Presentation.Gen.Models.FilterCriteria_customParameters>(global::BridgingIT.DevKit.Examples.DoFiesta.Presentation.Gen.Models.FilterCriteria_customParameters.CreateFromDiscriminatorValue); } },
                { "customType", n => { CustomType = n.GetEnumValue<global::BridgingIT.DevKit.Examples.DoFiesta.Presentation.Gen.Models.FilterCriteria_customType>(); } },
                { "field", n => { Field = n.GetStringValue(); } },
                { "filters", n => { Filters = n.GetCollectionOfObjectValues<global::BridgingIT.DevKit.Examples.DoFiesta.Presentation.Gen.Models.FilterCriteria>(global::BridgingIT.DevKit.Examples.DoFiesta.Presentation.Gen.Models.FilterCriteria.CreateFromDiscriminatorValue)?.AsList(); } },
                { "logic", n => { Logic = n.GetEnumValue<global::BridgingIT.DevKit.Examples.DoFiesta.Presentation.Gen.Models.FilterCriteria_logic>(); } },
                { "operator", n => { Operator = n.GetEnumValue<global::BridgingIT.DevKit.Examples.DoFiesta.Presentation.Gen.Models.FilterCriteria_operator>(); } },
                { "specificationArguments", n => { SpecificationArguments = n.GetObjectValue<UntypedNode>(UntypedNode.CreateFromDiscriminatorValue); } },
                { "specificationName", n => { SpecificationName = n.GetStringValue(); } },
                { "value", n => { Value = n.GetObjectValue<global::BridgingIT.DevKit.Examples.DoFiesta.Presentation.Gen.Models.FilterCriteria_value>(global::BridgingIT.DevKit.Examples.DoFiesta.Presentation.Gen.Models.FilterCriteria_value.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::BridgingIT.DevKit.Examples.DoFiesta.Presentation.Gen.Models.CompositeSpecification>("compositeSpecification", CompositeSpecification);
            writer.WriteObjectValue<global::BridgingIT.DevKit.Examples.DoFiesta.Presentation.Gen.Models.FilterCriteria_customParameters>("customParameters", CustomParameters);
            writer.WriteEnumValue<global::BridgingIT.DevKit.Examples.DoFiesta.Presentation.Gen.Models.FilterCriteria_customType>("customType", CustomType);
            writer.WriteStringValue("field", Field);
            writer.WriteCollectionOfObjectValues<global::BridgingIT.DevKit.Examples.DoFiesta.Presentation.Gen.Models.FilterCriteria>("filters", Filters);
            writer.WriteEnumValue<global::BridgingIT.DevKit.Examples.DoFiesta.Presentation.Gen.Models.FilterCriteria_logic>("logic", Logic);
            writer.WriteEnumValue<global::BridgingIT.DevKit.Examples.DoFiesta.Presentation.Gen.Models.FilterCriteria_operator>("operator", Operator);
            writer.WriteObjectValue<UntypedNode>("specificationArguments", SpecificationArguments);
            writer.WriteStringValue("specificationName", SpecificationName);
            writer.WriteObjectValue<global::BridgingIT.DevKit.Examples.DoFiesta.Presentation.Gen.Models.FilterCriteria_value>("value", Value);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
