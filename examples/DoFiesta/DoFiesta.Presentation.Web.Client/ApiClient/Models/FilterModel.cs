// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace BridgingIT.DevKit.Examples.DoFiesta.Presentation.Gen.Models
{
    /// <summary>
    /// Represents a complete filter model for querying data with pagination, sorting, and filtering
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class FilterModel : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>A tree structure containing specification nodes for complex filtering logic</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::BridgingIT.DevKit.Examples.DoFiesta.Presentation.Gen.Models.CompositeSpecification? CompositeSpecificationSchema { get; set; }
#nullable restore
#else
        public global::BridgingIT.DevKit.Examples.DoFiesta.Presentation.Gen.Models.CompositeSpecification CompositeSpecificationSchema { get; set; }
#endif
        /// <summary>Represents a single filter criterion for filtering query results</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::BridgingIT.DevKit.Examples.DoFiesta.Presentation.Gen.Models.FilterCriteria? FilterCriteriaSchema { get; set; }
#nullable restore
#else
        public global::BridgingIT.DevKit.Examples.DoFiesta.Presentation.Gen.Models.FilterCriteria FilterCriteriaSchema { get; set; }
#endif
        /// <summary>Filter criteria to apply to the query</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::BridgingIT.DevKit.Examples.DoFiesta.Presentation.Gen.Models.FilterCriteria>? Filters { get; set; }
#nullable restore
#else
        public List<global::BridgingIT.DevKit.Examples.DoFiesta.Presentation.Gen.Models.FilterCriteria> Filters { get; set; }
#endif
        /// <summary>Navigation property for hierarchical queries</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Hierarchy { get; set; }
#nullable restore
#else
        public string Hierarchy { get; set; }
#endif
        /// <summary>Maximum depth for hierarchical data loading</summary>
        public int? HierarchyMaxDepth { get; set; }
        /// <summary>Related entities to include via eager loading</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Includes { get; set; }
#nullable restore
#else
        public List<string> Includes { get; set; }
#endif
        /// <summary>Disable change tracking for improved query performance</summary>
        public bool? NoTracking { get; set; }
        /// <summary>Sort criteria to apply to the results</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::BridgingIT.DevKit.Examples.DoFiesta.Presentation.Gen.Models.FilterOrderCriteria>? Orderings { get; set; }
#nullable restore
#else
        public List<global::BridgingIT.DevKit.Examples.DoFiesta.Presentation.Gen.Models.FilterOrderCriteria> Orderings { get; set; }
#endif
        /// <summary>The page number for pagination (1-based)</summary>
        public int? Page { get; set; }
        /// <summary>The number of items per page</summary>
        public int? PageSize { get; set; }
        /// <summary>Polymorphic specification node: either a leaf (named specification) or group (combining multiple nodes)</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public UntypedNode? SpecificationNodeSchema { get; set; }
#nullable restore
#else
        public UntypedNode SpecificationNodeSchema { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::BridgingIT.DevKit.Examples.DoFiesta.Presentation.Gen.Models.FilterModel"/> and sets the default values.
        /// </summary>
        public FilterModel()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::BridgingIT.DevKit.Examples.DoFiesta.Presentation.Gen.Models.FilterModel"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::BridgingIT.DevKit.Examples.DoFiesta.Presentation.Gen.Models.FilterModel CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::BridgingIT.DevKit.Examples.DoFiesta.Presentation.Gen.Models.FilterModel();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "_CompositeSpecificationSchema", n => { CompositeSpecificationSchema = n.GetObjectValue<global::BridgingIT.DevKit.Examples.DoFiesta.Presentation.Gen.Models.CompositeSpecification>(global::BridgingIT.DevKit.Examples.DoFiesta.Presentation.Gen.Models.CompositeSpecification.CreateFromDiscriminatorValue); } },
                { "_FilterCriteriaSchema", n => { FilterCriteriaSchema = n.GetObjectValue<global::BridgingIT.DevKit.Examples.DoFiesta.Presentation.Gen.Models.FilterCriteria>(global::BridgingIT.DevKit.Examples.DoFiesta.Presentation.Gen.Models.FilterCriteria.CreateFromDiscriminatorValue); } },
                { "filters", n => { Filters = n.GetCollectionOfObjectValues<global::BridgingIT.DevKit.Examples.DoFiesta.Presentation.Gen.Models.FilterCriteria>(global::BridgingIT.DevKit.Examples.DoFiesta.Presentation.Gen.Models.FilterCriteria.CreateFromDiscriminatorValue)?.AsList(); } },
                { "hierarchy", n => { Hierarchy = n.GetStringValue(); } },
                { "hierarchyMaxDepth", n => { HierarchyMaxDepth = n.GetIntValue(); } },
                { "includes", n => { Includes = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "noTracking", n => { NoTracking = n.GetBoolValue(); } },
                { "orderings", n => { Orderings = n.GetCollectionOfObjectValues<global::BridgingIT.DevKit.Examples.DoFiesta.Presentation.Gen.Models.FilterOrderCriteria>(global::BridgingIT.DevKit.Examples.DoFiesta.Presentation.Gen.Models.FilterOrderCriteria.CreateFromDiscriminatorValue)?.AsList(); } },
                { "page", n => { Page = n.GetIntValue(); } },
                { "pageSize", n => { PageSize = n.GetIntValue(); } },
                { "_SpecificationNodeSchema", n => { SpecificationNodeSchema = n.GetObjectValue<UntypedNode>(UntypedNode.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::BridgingIT.DevKit.Examples.DoFiesta.Presentation.Gen.Models.CompositeSpecification>("_CompositeSpecificationSchema", CompositeSpecificationSchema);
            writer.WriteObjectValue<global::BridgingIT.DevKit.Examples.DoFiesta.Presentation.Gen.Models.FilterCriteria>("_FilterCriteriaSchema", FilterCriteriaSchema);
            writer.WriteCollectionOfObjectValues<global::BridgingIT.DevKit.Examples.DoFiesta.Presentation.Gen.Models.FilterCriteria>("filters", Filters);
            writer.WriteStringValue("hierarchy", Hierarchy);
            writer.WriteIntValue("hierarchyMaxDepth", HierarchyMaxDepth);
            writer.WriteCollectionOfPrimitiveValues<string>("includes", Includes);
            writer.WriteBoolValue("noTracking", NoTracking);
            writer.WriteCollectionOfObjectValues<global::BridgingIT.DevKit.Examples.DoFiesta.Presentation.Gen.Models.FilterOrderCriteria>("orderings", Orderings);
            writer.WriteIntValue("page", Page);
            writer.WriteIntValue("pageSize", PageSize);
            writer.WriteObjectValue<UntypedNode>("_SpecificationNodeSchema", SpecificationNodeSchema);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
