{
  "openapi": "3.0.4",
  "info": {
    "title": "Backend API",
    "version": "v1"
  },
  "paths": {
    "/api/_system": {
      "get": {
        "tags": [
          "_system"
        ],
        "operationId": "_system",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/_system/echo": {
      "get": {
        "tags": [
          "_system"
        ],
        "operationId": "echo",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/_system/info": {
      "get": {
        "tags": [
          "_system"
        ],
        "operationId": "info",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemInfo"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/_system/modules": {
      "get": {
        "tags": [
          "_system"
        ],
        "operationId": "modules",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SystemModule"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/_system/identity/evaluate/entities/permissions/{permission}": {
      "get": {
        "tags": [
          "_system/identity"
        ],
        "description": "Checks if the current user has the required permission for the entity type.",
        "operationId": "permissions",
        "parameters": [
          {
            "name": "permission",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entityType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entityId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityPermissionModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/_system/identity/evaluate/entities/permissions": {
      "get": {
        "tags": [
          "_system/identity"
        ],
        "description": "Gets all effective permissions for the current user and the entity type.",
        "operationId": "permissions2",
        "parameters": [
          {
            "name": "entityType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entityId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityPermissionModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/_system/identity/connect/.well-known/openid-configuration": {
      "get": {
        "tags": [
          "_system/identity/connect"
        ],
        "description": "Returns the OpenID Connect discovery document.",
        "operationId": "openid-configuration",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpenIdConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/api/_system/identity/connect/authorize": {
      "get": {
        "tags": [
          "_system/identity/connect"
        ],
        "description": "Shows the signin page for user selection.",
        "operationId": "authorize",
        "parameters": [
          {
            "name": "response_type",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client_id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "redirect_uri",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scope",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/_system/identity/connect/authorize/callback": {
      "get": {
        "tags": [
          "_system/identity/connect"
        ],
        "description": "Handles the user selection and generates authorization code.",
        "operationId": "callback",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "response_type",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client_id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "redirect_uri",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scope",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "302": {
            "description": "Found"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/_system/identity/connect/token": {
      "post": {
        "tags": [
          "_system/identity/connect"
        ],
        "description": "Issues tokens for various grant types.",
        "operationId": "token",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "grant_type": {
                    "type": "string"
                  },
                  "client_id": {
                    "type": "string"
                  },
                  "client_secret": {
                    "type": "string"
                  },
                  "code": {
                    "type": "string"
                  },
                  "redirect_uri": {
                    "type": "string"
                  },
                  "refresh_token": {
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "scope": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "grant_type": {
                  "style": "form"
                },
                "client_id": {
                  "style": "form"
                },
                "client_secret": {
                  "style": "form"
                },
                "code": {
                  "style": "form"
                },
                "redirect_uri": {
                  "style": "form"
                },
                "refresh_token": {
                  "style": "form"
                },
                "username": {
                  "style": "form"
                },
                "password": {
                  "style": "form"
                },
                "scope": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OAuth2Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/_system/identity/connect/userinfo": {
      "get": {
        "tags": [
          "_system/identity/connect"
        ],
        "description": "Returns information about the authenticated user.",
        "operationId": "userinfo",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInfoResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/_system/identity/connect/logout": {
      "get": {
        "tags": [
          "_system/identity/connect"
        ],
        "description": "Handles user logout.",
        "operationId": "logout",
        "parameters": [
          {
            "name": "id_token_hint",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "post_logout_redirect_uri",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "302": {
            "description": "Found"
          }
        }
      }
    },
    "/api/_system/identity/connect/debuginfo": {
      "get": {
        "tags": [
          "_system/identity/connect"
        ],
        "description": "Returns debug information about the identity provider configuration.",
        "operationId": "debuginfo",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DebugInfoResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/_system/identity/management/entities/permissions/users/{userId}": {
      "post": {
        "tags": [
          "_system/identity/management"
        ],
        "description": "Grants a specific permission to a user for a specific entity.",
        "operationId": "usersPOST",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionRequestModel"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "_system/identity/management"
        ],
        "description": "Revokes a specific permission from a user for a specific entity.",
        "operationId": "usersDELETE",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionRequestModel"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "_system/identity/management"
        ],
        "description": "Retrieves all granted permissions for a user for a specific entity.",
        "operationId": "usersAll",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entityType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entityId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/_system/identity/management/entities/permissions/users/{userId}/all": {
      "delete": {
        "tags": [
          "_system/identity/management"
        ],
        "description": "Revokes all permissions from a user.",
        "operationId": "all",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/_system/identity/management/entities/permissions/users": {
      "get": {
        "tags": [
          "_system/identity/management"
        ],
        "description": "Retrieves all granted permissions for all users for a specific entity.",
        "operationId": "usersAll2",
        "parameters": [
          {
            "name": "entityType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entityId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EntityPermissionInfo"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/_system/identity/management/entities/permissions/roles/{role}": {
      "post": {
        "tags": [
          "_system/identity/management"
        ],
        "description": "Grants a specific permission to a role for a specific entity.",
        "operationId": "rolesPOST",
        "parameters": [
          {
            "name": "role",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionRequestModel"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "_system/identity/management"
        ],
        "description": "Revokes a specific permission from a role for a specific entity.",
        "operationId": "rolesDELETE",
        "parameters": [
          {
            "name": "role",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionRequestModel"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "_system/identity/management"
        ],
        "description": "Retrieves all granted permissions for a role for a specific entity.",
        "operationId": "rolesAll",
        "parameters": [
          {
            "name": "role",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entityType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entityId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/_system/identity/management/entities/permissions/roles/{role}/all": {
      "delete": {
        "tags": [
          "_system/identity/management"
        ],
        "description": "Revokes all permissions from a role.",
        "operationId": "all2",
        "parameters": [
          {
            "name": "role",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/_system/identity/management/entities/permissions/roles": {
      "get": {
        "tags": [
          "_system/identity/management"
        ],
        "description": "Retrieves all granted permissions for all roles for a specific entity.",
        "operationId": "rolesAll2",
        "parameters": [
          {
            "name": "entityType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entityId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EntityPermissionInfo"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/_system/jobs": {
      "get": {
        "tags": [
          "_system/jobs"
        ],
        "description": "Retrieves a list of all scheduled jobs.",
        "operationId": "GetJobs",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobInfo"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/_system/jobs/{jobName}/{jobGroup}": {
      "get": {
        "tags": [
          "_system/jobs"
        ],
        "description": "Retrieves details for a specific job.",
        "operationId": "GetJob",
        "parameters": [
          {
            "name": "jobName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jobGroup",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobInfo"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/_system/jobs/{jobName}/{jobGroup}/runs": {
      "get": {
        "tags": [
          "_system/jobs"
        ],
        "description": "Retrieves execution history for a specific job with optional filters.",
        "operationId": "GetJobRuns",
        "parameters": [
          {
            "name": "jobName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jobGroup",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "priority",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "instanceName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resultContains",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "take",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobRun"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "_system/jobs"
        ],
        "description": "Purges job run history older than a specified date.",
        "operationId": "PurgeJobRuns",
        "parameters": [
          {
            "name": "jobName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jobGroup",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "olderThan",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/_system/jobs/{jobName}/{jobGroup}/stats": {
      "get": {
        "tags": [
          "_system/jobs"
        ],
        "description": "Retrieves aggregated statistics for a job’s execution history.",
        "operationId": "GetJobRunStats",
        "parameters": [
          {
            "name": "jobName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jobGroup",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobRunStats"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/_system/jobs/{jobName}/{jobGroup}/triggers": {
      "get": {
        "tags": [
          "_system/jobs"
        ],
        "description": "Retrieves all triggers associated with a specific job.",
        "operationId": "GetJobTriggers",
        "parameters": [
          {
            "name": "jobName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jobGroup",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TriggerInfo"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/_system/jobs/{jobName}/{jobGroup}/trigger": {
      "post": {
        "tags": [
          "_system/jobs"
        ],
        "description": "Triggers a job to run immediately with optional data.",
        "operationId": "TriggerJob",
        "parameters": [
          {
            "name": "jobName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jobGroup",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {}
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/_system/jobs/{jobName}/{jobGroup}/pause": {
      "post": {
        "tags": [
          "_system/jobs"
        ],
        "description": "Pauses the execution of a specific job.",
        "operationId": "PauseJob",
        "parameters": [
          {
            "name": "jobName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jobGroup",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/_system/jobs/{jobName}/{jobGroup}/resume": {
      "post": {
        "tags": [
          "_system/jobs"
        ],
        "description": "Resumes the execution of a paused job.",
        "operationId": "ResumeJob",
        "parameters": [
          {
            "name": "jobName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jobGroup",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/_system/jobs/{jobName}/{jobGroup}/interrupt": {
      "post": {
        "tags": [
          "_system/jobs"
        ],
        "description": "Interrupts the execution of a currently running job.",
        "operationId": "InterruptJob",
        "parameters": [
          {
            "name": "jobName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jobGroup",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/_system/logentries": {
      "get": {
        "tags": [
          "_system/logentries"
        ],
        "description": "Retrieves a paged list of log entries with optional filters. Dates must be in ISO 8601 format (e.g., 2025-04-15T00:00:00Z).",
        "operationId": "GetLogEntries",
        "parameters": [
          {
            "name": "startTime",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ageDays",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "level",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/LogLevel"
            }
          },
          {
            "name": "traceId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "correlationId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "logKey",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "moduleName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "threadId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shortTypeName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchText",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogEntryQueryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "_system/logentries"
        ],
        "description": "Queues a maintenance operation for log entries older than a specified date or age, with options to archive, set batch size, and delay interval. Date must be in ISO 8601 format (e.g., 2025-04-01T00:00:00Z).",
        "operationId": "CleanupLogEntries",
        "parameters": [
          {
            "name": "olderThan",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ageDays",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "archive",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "batchSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1000
            }
          },
          {
            "name": "delayIntervalMilliseconds",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double",
              "default": 100
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/_system/logentries/stream": {
      "get": {
        "tags": [
          "_system/logentries"
        ],
        "description": "Streams log entries in real-time based on optional filters. Dates must be in ISO 8601 format (e.g., 2025-04-15T00:00:00Z).",
        "operationId": "StreamLogEntries",
        "parameters": [
          {
            "name": "startTime",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ageDays",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "level",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/LogLevel"
            }
          },
          {
            "name": "traceId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "correlationId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "logKey",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "moduleName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "threadId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shortTypeName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchText",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pollingIntervalSeconds",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LogEntryModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/_system/logentries/stats": {
      "get": {
        "tags": [
          "_system/logentries"
        ],
        "description": "Retrieves aggregated statistics for log entries, grouped by time intervals. Dates must be in ISO 8601 format (e.g., 2025-04-15T00:00:00Z).",
        "operationId": "GetLogEntriesStatistics",
        "parameters": [
          {
            "name": "startTime",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupByIntervalHours",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogEntryStatisticsModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/_system/logentries/export": {
      "get": {
        "tags": [
          "_system/logentries"
        ],
        "description": "Exports log entries as a downloadable file in the specified format (csv, json, txt). Dates must be in ISO 8601 format (e.g., 2025-04-15T00:00:00Z).",
        "operationId": "ExportLogEntries",
        "parameters": [
          {
            "name": "startTime",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ageDays",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "level",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/LogLevel"
            }
          },
          {
            "name": "traceId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "correlationId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "logKey",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "moduleName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "threadId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shortTypeName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchText",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "format",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/LogEntryExportFormat"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/core/enumerations": {
      "get": {
        "tags": [
          "Core.Enumerations"
        ],
        "operationId": "Core.Enumerations.GetAll",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnumerationModel"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/core/todoitems/{id}": {
      "get": {
        "tags": [
          "Core.TodoItems"
        ],
        "operationId": "Core.TodoItems.GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TodoItemModel"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Core.TodoItems"
        ],
        "operationId": "Core.TodoItems.Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TodoItemModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TodoItemModel"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Core.TodoItems"
        ],
        "operationId": "Core.TodoItems.Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/core/todoitems": {
      "get": {
        "tags": [
          "Core.TodoItems"
        ],
        "operationId": "Core.TodoItems.GetAll",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "URL-encoded JSON FilterModel",
              "properties": {
                "page": {
                  "type": "integer",
                  "default": 1
                },
                "pageSize": {
                  "type": "integer",
                  "default": 10
                },
                "orderings": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "direction": {
                        "type": "string",
                        "enum": [
                          "ascending",
                          "descending"
                        ]
                      }
                    }
                  }
                },
                "filters": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "operator": {
                        "type": "string",
                        "enum": [
                          "equal",
                          "notequal",
                          "isnull",
                          "isnotnull",
                          "isempty",
                          "isnotempty",
                          "greaterthan",
                          "greaterthanorequal",
                          "lessthan",
                          "lessthanorequal",
                          "contains",
                          "doesnotcontain",
                          "startswith",
                          "doesnotstartwith",
                          "endswith",
                          "doesnotendwith",
                          "any",
                          "all",
                          "none"
                        ]
                      },
                      "value": {
                        "type": "object"
                      },
                      "logic": {
                        "type": "string",
                        "enum": [
                          "and",
                          "or"
                        ]
                      },
                      "filters": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      },
                      "customType": {
                        "type": "string",
                        "enum": [
                          "none",
                          "fulltextsearch",
                          "daterange",
                          "daterelative",
                          "timerange",
                          "timerelative",
                          "numericrange",
                          "isnull",
                          "isnotnull",
                          "enumvalues",
                          "textin",
                          "textnotin",
                          "numericin",
                          "numericnotin",
                          "namedspecification",
                          "compositespecification"
                        ]
                      },
                      "customParameters": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "object"
                        }
                      },
                      "specificationName": {
                        "type": "string"
                      },
                      "specificationArguments": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      },
                      "compositeSpecification": {
                        "type": "object",
                        "properties": {
                          "nodes": {
                            "type": "array",
                            "items": {
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    },
                                    "arguments": {
                                      "type": "array",
                                      "items": {
                                        "type": "object"
                                      }
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "logic": {
                                      "type": "string",
                                      "enum": [
                                        "and",
                                        "or"
                                      ]
                                    },
                                    "nodes": {
                                      "type": "array",
                                      "items": {
                                        "type": "object"
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "includes": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "hierarchy": {
                  "type": "string",
                  "nullable": true
                },
                "hierarchyMaxDepth": {
                  "type": "integer",
                  "default": 5
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TodoItemModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Core.TodoItems"
        ],
        "operationId": "Core.TodoItems.Create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TodoItemModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TodoItemModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/core/todoitems/search": {
      "post": {
        "tags": [
          "Core.TodoItems"
        ],
        "operationId": "Core.TodoItems.Search",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "FilterModel",
                "properties": {
                  "page": {
                    "type": "integer",
                    "default": 1
                  },
                  "pageSize": {
                    "type": "integer",
                    "default": 10
                  },
                  "orderings": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "field": {
                          "type": "string"
                        },
                        "direction": {
                          "type": "string",
                          "enum": [
                            "ascending",
                            "descending"
                          ]
                        }
                      }
                    }
                  },
                  "filters": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "field": {
                          "type": "string"
                        },
                        "operator": {
                          "type": "string",
                          "enum": [
                            "equal",
                            "notequal",
                            "isnull",
                            "isnotnull",
                            "isempty",
                            "isnotempty",
                            "greaterthan",
                            "greaterthanorequal",
                            "lessthan",
                            "lessthanorequal",
                            "contains",
                            "doesnotcontain",
                            "startswith",
                            "doesnotstartwith",
                            "endswith",
                            "doesnotendwith",
                            "any",
                            "all",
                            "none"
                          ]
                        },
                        "value": {
                          "type": "object"
                        },
                        "logic": {
                          "type": "string",
                          "enum": [
                            "and",
                            "or"
                          ]
                        },
                        "filters": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        },
                        "customType": {
                          "type": "string",
                          "enum": [
                            "none",
                            "fulltextsearch",
                            "daterange",
                            "daterelative",
                            "timerange",
                            "timerelative",
                            "numericrange",
                            "isnull",
                            "isnotnull",
                            "enumvalues",
                            "textin",
                            "textnotin",
                            "numericin",
                            "numericnotin",
                            "namedspecification",
                            "compositespecification"
                          ]
                        },
                        "customParameters": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object"
                          }
                        },
                        "specificationName": {
                          "type": "string"
                        },
                        "specificationArguments": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        },
                        "compositeSpecification": {
                          "type": "object",
                          "properties": {
                            "nodes": {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      },
                                      "arguments": {
                                        "type": "array",
                                        "items": {
                                          "type": "object"
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "logic": {
                                        "type": "string",
                                        "enum": [
                                          "and",
                                          "or"
                                        ]
                                      },
                                      "nodes": {
                                        "type": "array",
                                        "items": {
                                          "type": "object"
                                        }
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "includes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "hierarchy": {
                    "type": "string",
                    "nullable": true
                  },
                  "hierarchyMaxDepth": {
                    "type": "integer",
                    "default": 5
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TodoItemModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/core/todoitems/actions/completeall": {
      "post": {
        "tags": [
          "Core.TodoItems"
        ],
        "operationId": "Core.TodoItems.CompleteAll",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "DebugInfoResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "tokenIssuer": {
            "type": "string",
            "nullable": true
          },
          "tokenProvider": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "configuredClients": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/DevClientDebugInfo"
            }
          },
          "configuredUsers": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/UserDebugInfo"
            }
          },
          "endpoints": {
            "$ref": "#/components/schemas/EndpointDebugInfo"
          }
        }
      },
      "DevClientDebugInfo": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "clientId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "redirectUris": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "allowedScopes": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "EndpointDebugInfo": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "authorization": {
            "type": "string",
            "nullable": true
          },
          "token": {
            "type": "string",
            "nullable": true
          },
          "userInfo": {
            "type": "string",
            "nullable": true
          },
          "logout": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "EntityPermissionInfo": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "permission": {
            "type": "string",
            "nullable": true
          },
          "source": {
            "type": "string",
            "nullable": true
          },
          "entityType": {
            "type": "string",
            "nullable": true
          },
          "entityId": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "roleName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "EntityPermissionModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "entityType": {
            "type": "string",
            "nullable": true
          },
          "entityId": {
            "type": "string",
            "nullable": true
          },
          "permission": {
            "type": "string",
            "nullable": true
          },
          "source": {
            "type": "string",
            "nullable": true
          },
          "hasAccess": {
            "type": "boolean"
          }
        }
      },
      "EnumerationModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "todoStatuses": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TodoStatus"
            }
          },
          "todoPriorities": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TodoPriority"
            }
          },
          "subscriptionStatuses": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SubscriptionStatus"
            }
          },
          "subscriptionPlans": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SubscriptionPlan"
            }
          },
          "subscriptionBillingCycles": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SubscriptionBillingCycle"
            }
          }
        }
      },
      "JobInfo": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "group": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "triggerCount": {
            "type": "integer",
            "format": "int32"
          },
          "lastRun": {
            "$ref": "#/components/schemas/JobRun"
          },
          "isRunning": {
            "type": "boolean",
            "readOnly": true
          },
          "lastRunStats": {
            "$ref": "#/components/schemas/JobRunStats"
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "triggers": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TriggerInfo"
            }
          },
          "runs": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/JobRun"
            }
          }
        }
      },
      "JobRun": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "jobName": {
            "type": "string",
            "nullable": true
          },
          "jobGroup": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "triggerName": {
            "type": "string",
            "nullable": true
          },
          "triggerGroup": {
            "type": "string",
            "nullable": true
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "startTimeText": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "endTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endTimeText": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "scheduledTime": {
            "type": "string",
            "format": "date-time"
          },
          "durationMs": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "durationText": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "isRunning": {
            "type": "boolean",
            "readOnly": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "nullable": true
            }
          },
          "instanceName": {
            "type": "string",
            "nullable": true
          },
          "priority": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "result": {
            "type": "string",
            "nullable": true
          },
          "retryCount": {
            "type": "integer",
            "format": "int32"
          },
          "category": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "JobRunStats": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "totalRuns": {
            "type": "integer",
            "format": "int32"
          },
          "successCount": {
            "type": "integer",
            "format": "int32"
          },
          "failureCount": {
            "type": "integer",
            "format": "int32"
          },
          "interruptCount": {
            "type": "integer",
            "format": "int32"
          },
          "avgRunDurationMs": {
            "type": "number",
            "format": "double"
          },
          "avgRunDurationText": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "maxRunDurationMs": {
            "type": "integer",
            "format": "int64"
          },
          "maxRunDurationText": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "minRunDurationMs": {
            "type": "integer",
            "format": "int64"
          },
          "minRunDurationText": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          }
        }
      },
      "LogEntryExportFormat": {
        "type": "string",
        "enum": [
          "Csv",
          "Json",
          "Txt"
        ]
      },
      "LogEntryModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "messageTemplate": {
            "type": "string",
            "nullable": true
          },
          "level": {
            "type": "string",
            "nullable": true
          },
          "timeStamp": {
            "type": "string",
            "format": "date-time"
          },
          "exception": {
            "type": "string",
            "nullable": true
          },
          "logEvents": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "nullable": true
            }
          },
          "traceId": {
            "type": "string",
            "nullable": true
          },
          "spanId": {
            "type": "string",
            "nullable": true
          },
          "correlationId": {
            "type": "string",
            "nullable": true
          },
          "logKey": {
            "type": "string",
            "nullable": true
          },
          "moduleName": {
            "type": "string",
            "nullable": true
          },
          "threadId": {
            "type": "string",
            "nullable": true
          },
          "shortTypeName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "LogEntryQueryResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/LogEntryModel"
            }
          },
          "continuationToken": {
            "type": "string",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "LogEntryStatisticsModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "levelCounts": {
            "type": "object",
            "nullable": true,
            "additionalProperties": false,
            "properties": {
              "Trace": {
                "type": "integer",
                "format": "int32"
              },
              "Debug": {
                "type": "integer",
                "format": "int32"
              },
              "Information": {
                "type": "integer",
                "format": "int32"
              },
              "Warning": {
                "type": "integer",
                "format": "int32"
              },
              "Error": {
                "type": "integer",
                "format": "int32"
              },
              "Critical": {
                "type": "integer",
                "format": "int32"
              },
              "None": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "timeIntervalCounts": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "object",
              "nullable": true,
              "additionalProperties": false,
              "properties": {
                "Trace": {
                  "type": "integer",
                  "format": "int32"
                },
                "Debug": {
                  "type": "integer",
                  "format": "int32"
                },
                "Information": {
                  "type": "integer",
                  "format": "int32"
                },
                "Warning": {
                  "type": "integer",
                  "format": "int32"
                },
                "Error": {
                  "type": "integer",
                  "format": "int32"
                },
                "Critical": {
                  "type": "integer",
                  "format": "int32"
                },
                "None": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      },
      "LogLevel": {
        "type": "string",
        "enum": [
          "Trace",
          "Debug",
          "Information",
          "Warning",
          "Error",
          "Critical",
          "None"
        ]
      },
      "OAuth2Error": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "error": {
            "type": "string",
            "nullable": true
          },
          "error_description": {
            "type": "string",
            "nullable": true
          },
          "error_uri": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "OpenIdConfiguration": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "issuer": {
            "type": "string",
            "nullable": true
          },
          "authorization_endpoint": {
            "type": "string",
            "nullable": true
          },
          "token_endpoint": {
            "type": "string",
            "nullable": true
          },
          "userinfo_endpoint": {
            "type": "string",
            "nullable": true
          },
          "end_session_endpoint": {
            "type": "string",
            "nullable": true
          },
          "grant_types_supported": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "response_types_supported": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "response_modes_supported": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "scopes_supported": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "claims_supported": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "token_endpoint_auth_methods_supported": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "PermissionRequestModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "entityType": {
            "type": "string",
            "nullable": true
          },
          "entityId": {
            "type": "string",
            "nullable": true
          },
          "permission": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ProblemDetails": {
        "type": "object",
        "additionalProperties": {},
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SubscriptionBillingCycle": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true,
            "format": "int32"
          },
          "value": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "enabled": {
            "type": "boolean",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "autoRenew": {
            "type": "boolean",
            "readOnly": true
          }
        }
      },
      "SubscriptionPlan": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true,
            "format": "int32"
          },
          "value": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "description": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "details": {
            "$ref": "#/components/schemas/SubscriptionPlanDetails"
          }
        }
      },
      "SubscriptionPlanDetails": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "pricePerMonth": {
            "type": "number",
            "format": "double"
          },
          "maxTodos": {
            "type": "integer",
            "format": "int32"
          },
          "maxUsersPerTodo": {
            "type": "integer",
            "format": "int32"
          },
          "allowsRecurring": {
            "type": "boolean"
          },
          "allowsAttachments": {
            "type": "boolean"
          },
          "allowsTemplates": {
            "type": "boolean"
          },
          "maxProjects": {
            "type": "integer",
            "format": "int32"
          },
          "allowsComments": {
            "type": "boolean"
          }
        }
      },
      "SubscriptionStatus": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true,
            "format": "int32"
          },
          "value": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "enabled": {
            "type": "boolean",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          }
        }
      },
      "SystemInfo": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "request": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "nullable": true
            }
          },
          "runtime": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string",
              "nullable": true
            }
          },
          "memory": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string",
              "nullable": true
            }
          },
          "configuration": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string",
              "nullable": true
            }
          },
          "customMetadata": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string",
              "nullable": true
            }
          },
          "uptime": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SystemModule": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          },
          "isRegistered": {
            "type": "boolean"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "TodoItemModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "orderIndex": {
            "type": "integer",
            "format": "int32"
          },
          "assignee": {
            "type": "string",
            "nullable": true
          },
          "steps": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TodoStepModel"
            }
          },
          "concurrencyVersion": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "TodoPriority": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true,
            "format": "int32"
          },
          "value": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "enabled": {
            "type": "boolean",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          }
        }
      },
      "TodoStatus": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true,
            "format": "int32"
          },
          "value": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "enabled": {
            "type": "boolean",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          }
        }
      },
      "TodoStepModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "todoItemId": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "orderIndex": {
            "type": "integer",
            "format": "int32"
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "TokenResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "access_token": {
            "type": "string",
            "nullable": true
          },
          "refresh_token": {
            "type": "string",
            "nullable": true
          },
          "expires_in": {
            "type": "integer",
            "format": "int32"
          },
          "refresh_expires_in": {
            "type": "integer",
            "format": "int32"
          },
          "token_type": {
            "type": "string",
            "nullable": true
          },
          "id_token": {
            "type": "string",
            "nullable": true
          },
          "session_state": {
            "type": "string",
            "nullable": true
          },
          "scope": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "TriggerInfo": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "group": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "cronExpression": {
            "type": "string",
            "nullable": true
          },
          "nextFireTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "nextFireTimeText": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "previousFireTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "previousFireTimeText": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UserDebugInfo": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "roles": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "isDefault": {
            "type": "boolean"
          }
        }
      },
      "UserInfoResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "sub": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "given_name": {
            "type": "string",
            "nullable": true
          },
          "family_name": {
            "type": "string",
            "nullable": true
          },
          "preferred_username": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "email_verified": {
            "type": "boolean"
          },
          "roles": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "oauth2": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://localhost:5001/api/_system/identity/connect/authorize",
            "tokenUrl": "https://localhost:5001/api/_system/identity/connect/token",
            "scopes": {
              "openid": "OpenID Connect scope",
              "profile": "Profile information",
              "email": "Email information"
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "oauth2": [
        "openid",
        "profile",
        "email"
      ]
    }
  ]
}