// <auto-generated />
using System;
using BridgingIT.DevKit.Examples.EventSourcingDemo.Infrastructure.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BridgingIT.DevKit.Examples.EventSourcing.Infrastructure.Migrations
{
    [DbContext(typeof(EventSourcingDemoDbContext))]
    partial class DemoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BridgingIT.DevKit.Examples.EventSourcingDemo.Infrastructure.Models.PersonDatabaseEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Person", "dbo");
                });

            modelBuilder.Entity("BridgingIT.DevKit.Infrastructure.EntityFramework.Outbox.Models.Outbox", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Aggregate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AggregateEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("AggregateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AggregateType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsProcessed")
                        .HasColumnType("bit");

                    b.Property<int>("RetryAttempt")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TimeStamp")
                        .HasDatabaseName("IX_EventstoreOutbox_TimeStamp");

                    b.ToTable("EventstoreOutbox", "dbo");
                });

            modelBuilder.Entity("BridgingIT.DevKit.Infrastructure.EventSourcing.EventStoreAggregateEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AggregateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AggregateType")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AggregateVersion")
                        .HasColumnType("int");

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Identifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AggregateId")
                        .HasDatabaseName("IX_AggregateEvent_AggregateId");

                    b.HasIndex("AggregateType")
                        .HasDatabaseName("IX_AggregateEvent_AggregateType");

                    b.HasIndex("AggregateId", "AggregateVersion")
                        .HasDatabaseName("IX_AggregateEvent_AggregateIDVersion");

                    b.HasIndex("AggregateId", "AggregateType", "AggregateVersion")
                        .IsUnique()
                        .HasDatabaseName("IX_AggregateEvent_IX_AggregateEvent_AggregateIDAggrTypeVers");

                    b.ToTable("AggregateEvent", "dbo");
                });

            modelBuilder.Entity("BridgingIT.DevKit.Infrastructure.EventSourcing.EventStoreSnapshot", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AggregateType")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("SnapshotDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Id", "AggregateType")
                        .IsUnique();

                    b.ToTable("Snapshot", "dbo");
                });
#pragma warning restore 612, 618
        }
    }
}
