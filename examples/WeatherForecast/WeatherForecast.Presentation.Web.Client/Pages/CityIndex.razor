@page "/cities"
@* @rendermode @(new InteractiveWebAssemblyRenderMode(prerender: false)) *@
@inject IStringLocalizer<Global> localizer
@inject IApiClient ApiClient

<PageTitle>Cities</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">Cities</MudText>

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-16">
    <MudGrid>
        <MudItem xs="12" lg="1">
            <MudTooltip Text="@localizer["Title_CreateCity"]">
                <MudFab OnClick="e => OnCreate()" Color="Color.Primary" StartIcon="@Icons.Material.Filled.Add"/>
            </MudTooltip>
        </MudItem>
        <MudItem xs="12" lg="11">
            <MudText Typo="Typo.h3" GutterBottom="true">@localizer["Title_Cities"]</MudText>
        </MudItem>
        <MudItem xs="12" lg="6">
            @if (cities is null)
            {
                <MudProgressCircular Color="Color.Default" Indeterminate="true"/>
            }
            else
            {
                <MudTable Items="cities" Hover="true" SortLabel="Sort By" Elevation="0">
                    <HeaderContent>
                        <MudTh>
                            <MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<CityModel, object>(x => x.Name)">@localizer["Label_CityName"]</MudTableSortLabel>
                        </MudTh>
                        <MudTh>
                            <MudTableSortLabel SortBy="new Func<CityModel, object>(x => x.Country)">@localizer["Label_CountryName"]</MudTableSortLabel>
                        </MudTh>
                    </HeaderContent>
                    <RowTemplate>
                        <MudTooltip Text="@context.Id.ToString()">
                            <MudTd DataLabel="CityName">@localizer[context.Name]</MudTd>
                        </MudTooltip>
                        <MudTd DataLabel="CountryName">@localizer[context.Country]</MudTd>
                    </RowTemplate>
                    <PagerContent>
                        <MudTablePager PageSizeOptions="new[] { 10, 50, 100 }"/>
                    </PagerContent>
                </MudTable>
            }
        </MudItem>
    </MudGrid>
</MudContainer>

@code {
    private ICollection<CityModel> cities;

    protected override async Task OnInitializedAsync()
    {
        cities = (await ApiClient.City_GetAllAsync().ConfigureAwait(false)).Result.ToList();
    }

    private async Task OnCreate()
    {
        var dialog = await dialogService.ShowAsync<CityEditor>(localizer["Title_CreateCity"]);
        var result = await dialog.Result;

        if (!result.Canceled && result.Data is CityModel model)
        {
            try
            {
                var response = await ApiClient.City_PostAsync(model);
                model.Id = response.Headers.GetValueOrDefault("x-entity-id").FirstOrDefault().To<Guid>();
                cities.Add(model);
                snackbar.Add($"{localizer["Notification_CityCreated"]}: {localizer[model.Name]} ({model.Id})");
            }
            catch (ApiException<ProblemDetails> ex)
            {
                snackbar.Add(localizer["Notification_Error"] + $": [{ex.StatusCode}] {ex.Result.Detail} {ex.Result.AdditionalProperties.FirstOrDefault()}");
            }
        }
    }

}