@using BridgingIT.DevKit.Presentation.Web.Pages
@inherits RazorLayoutSlice<BridgingIT.DevKit.Presentation.Web.Pages.LayoutModel>

<!DOCTYPE html>
<html lang="en" class="h-100">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>@Model.ProductName - @Model.Title</title>
    <base href="/" />
    <script>
        (function() { // prevents screen flashing on navigation
            const theme = localStorage.getItem('theme') || 'system';
            const effectiveTheme = theme === 'system' ? (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light') : theme;
            document.documentElement.setAttribute('data-bs-theme', effectiveTheme);
        })();
    </script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    @* <link href="https://cdn.jsdelivr.net/npm/bootswatch@5.3.3/dist/cosmo/bootstrap.min.css" rel="stylesheet"> *@
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.min.js" integrity="sha384-0pUGZvbkm6XF6gxjEnlmuGrJXVbNuzT9qBBavbLwCsOGabYfZo0T0to5eqruptLy" crossorigin="anonymous"></script>
    <style>
        :root {
            --bs-primary: #1a4151;
            --bs-primary-rgb: 26,65,81;
            --bs-secondary: #d35a24;
            --bs-secondary-rgb: 211,90,36;
        }

        [data-bs-theme="dark"] {
            --bs-primary: #2d5a6b;
            --bs-primary-rgb: 45,90,107;
            --bs-secondary: #ff7d45;
            --bs-secondary-rgb: 255,125,69;
        }

        body {
            font-size: .875rem;
            /* transition: background-color 0.3s ease, color 0.3s ease; */
        }

        .feather {
            width: 16px;
            height: 16px;
            vertical-align: text-bottom;
        }

        .sidebar {
            position: fixed;
            top: 0;
            bottom: 0;
            left: 0;
            z-index: 100;
            padding: 48px 0 0;
            background-color: var(--bs-body-bg);
            border-right: 1px solid var(--bs-border-color);
            /* transition: margin-left 0.3s ease-in-out; */
        }

        [data-bs-theme="light"] .sidebar {
            background-color: var(--bs-tertiary-bg);
        }

        [data-bs-theme="dark"] .sidebar {
            background-color: var(--bs-dark-bg-subtle);
        }

            [data-bs-theme="dark"] .sidebar .nav-link {
                color: var(--bs-light);
            }

                [data-bs-theme="dark"] .sidebar .nav-link:hover,
                [data-bs-theme="dark"] .sidebar .nav-link.active {
                    background-color: rgba(var(--bs-light-rgb), 0.1);
                }

        .sidebar-sticky {
            position: relative;
            top: 0;
            height: calc(100vh - 48px);
            padding-top: .5rem;
            overflow-x: hidden;
            overflow-y: auto;
        }

        .sidebar .nav-link {
            font-weight: 500;
            color: var(--bs-body-color);
            /* transition: all 0.15s ease-in-out; */
            padding: 0.5rem 1rem;
            margin: 0.2rem 0;
            border-radius: 0.375rem;
        }

            .sidebar .nav-link:hover,
            .sidebar .nav-link:focus,
            .sidebar .nav-link.active {
                color: var(--bs-primary);
                background-color: rgba(var(--bs-primary-rgb), 0.1);
            }

        [data-bs-theme="dark"] .sidebar .nav-link:hover,
        [data-bs-theme="dark"] .sidebar .nav-link.active {
            color: var(--bs-secondary);
            background-color: rgba(var(--bs-secondary-rgb), 0.1);
        }

        .sidebar-heading {
            font-size: .75rem;
            text-transform: uppercase;
        }

        .sidebar-collapsed {
            margin-left: -100%;
        }

        .navbar {
            height: 3.5rem;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
            background-color: var(--bs-primary) !important;
        }

        [data-bs-theme="dark"] .navbar {
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
        }

        .navbar-brand {
            padding-top: .5rem;
            padding-bottom: .5rem;
            height: 3.5rem;
        }

        .sidebar {
            padding-top: 3.5rem;
        }

        .navbar .navbar-toggler {
            top: .5rem;
        }

        .theme-toggle {
            padding: 0.5rem;
            background: none;
            border: none;
            color: var(--bs-navbar-color);
        }

            .theme-toggle:hover {
                color: var(--bs-navbar-hover-color);
            }

            .theme-toggle i {
                font-size: 1.25rem;
            }

        [data-bs-theme="dark"] .light-icon,
        [data-bs-theme="light"] .dark-icon {
            display: none !important;
        }

        [data-bs-theme="light"] .light-icon,
        [data-bs-theme="dark"] .dark-icon {
            display: inline-block !important;
        }

        .sidebar-toggle {
            position: fixed;
            bottom: 1rem;
            left: 0.75rem;
            z-index: 101;
            color: var(--bs-body-color);
            background: var(--bs-body-bg);
            border: 1px solid var(--bs-border-color);
            border-radius: 50%;
            width: 2.5rem;
            height: 2.5rem;
            display: flex;
            align-items: center;
            justify-content: center;
            /* transition: all 0.15s ease-in-out; */
        }

            .sidebar-toggle:hover {
                background-color: var(--bs-tertiary-bg);
            }

        .sidebar-collapsed .sidebar-toggle {
            left: 1rem;
        }

        main {
            /* transition: margin-left 0.3s ease-in-out, width 0.3s ease-in-out, flex 0.3s ease-in-out, max-width 0.3s ease-in-out; */
        }

            main.expanded {
                width: 100% !important;
                max-width: 100% !important;
                flex: 0 0 100% !important;
            }

        .card {
            /* transition: transform 0.2s ease, box-shadow 0.2s ease, border-color 0.2s ease; */
            border: 1px solid var(--bs-border-color);
        }

            .card:hover {
                /* transform: translateY(-4px); */
                box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
                border-color: var(--bs-primary);
            }

        [data-bs-theme="light"] .card {
            background-color: var(--bs-tertiary-bg);
        }

        [data-bs-theme="dark"] .card {
            border: 1px solid var(--bs-border-color);
            background-color: var(--bs-dark-bg-subtle);
        }

            [data-bs-theme="dark"] .card:hover {
                box-shadow: 0 4px 12px rgba(255, 255, 255, 0.1);
                border-color: rgba(var(--bs-secondary-rgb), 0.6);
            }

        /* Theming */
        .btn-primary {
            background-color: var(--bs-primary);
            border-color: var(--bs-primary);
        }

            .btn-primary:hover {
                background-color: var(--bs-secondary);
                border-color: var(--bs-secondary);
            }

        .btn-outline-secondary {
            color: var(--bs-secondary);
            border-color: var(--bs-secondary);
        }

            .btn-outline-secondary:hover {
                background-color: var(--bs-secondary);
                border-color: var(--bs-secondary);
            }

        .btn-primary, .btn-outline-primary,
        .btn-secondary, .btn-outline-secondary {
            --bs-btn-color: #fff;
            --bs-btn-border-color: var(--bs-primary);
            --bs-btn-hover-color: #fff;
            --bs-btn-hover-bg: var(--bs-secondary);
            --bs-btn-hover-border-color: var(--bs-secondary);
            --bs-btn-active-color: #fff;
            --bs-btn-active-bg: var(--bs-secondary);
            --bs-btn-active-border-color: var(--bs-secondary);
            --bs-btn-disabled-color: var(--bs-primary);
            --bs-btn-disabled-border-color: var(--bs-primary);
        }

        .form-control:focus {
            border-color: var(--bs-primary);
            box-shadow: 0 0 0 0.25rem rgba(var(--bs-primary-rgb), 0.25);
        }

        .badge {
            --bs-badge-color: #fff;
            --bs-badge-bg: var(--bs-primary);
        }

        .badge {
            background-color: var(--bs-primary) !important;
        }

        a {
            color: var(--bs-primary);
        }

            a:hover {
                color: var(--bs-secondary);
            }

        .alert-primary {
            --bs-alert-color: var(--bs-primary);
            --bs-alert-bg: rgba(var(--bs-primary-rgb), 0.1);
            --bs-alert-border-color: rgba(var(--bs-primary-rgb), 0.2);
        }

        .progress {
            --bs-progress-bar-bg: var(--bs-primary);
        }

        .list-group-item.active {
            background-color: var(--bs-primary);
            border-color: var(--bs-primary);
        }

        .nav-tabs .nav-link.active {
            color: var(--bs-primary);
            border-color: var(--bs-primary);
        }
    </style>
</head>

<body>
    <header class="navbar navbar-dark sticky-top bg-dark flex-md-nowrap p-0 shadow">
        <a class="navbar-brand col-md-3 col-lg-2 me-0 px-3" href="#">@Model.ProductName</a>
        <button class="navbar-toggler position-absolute d-md-none collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#sidebarMenu" aria-controls="sidebarMenu" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>

        <div class="navbar-nav">
            <div class="nav-item text-nowrap">
                <button class="btn btn-link nav-link px-3 theme-toggle" type="button" aria-label="Toggle theme">
                    <i class="bi bi-sun-fill light-icon"></i>
                    <i class="bi bi-moon-fill dark-icon"></i>
                </button>
            </div>
            @* <div class="nav-item text-nowrap">
                <a class="nav-link px-3" href="#">Sign out</a>
            </div> *@
        </div>
    </header>

    <div class="container-fluid">
        <div class="row">
            @if (!Model.HideSideBar)
            {
                @(await RenderPartialAsync<BridgingIT.DevKit.Presentation.Web.Pages._SideBar, SidebarItem[]>(
                    new[] // TODO: inject from DI https://github.com/DamianEdwards/RazorSlices/issues/53
                    {
                        new SidebarItem("Dashboard", "house", "/api/_system/identity/connect"),
                        new SidebarItem("Authorize", "person", "/api/_system/identity/connect/authorize2?response_type=code"),
                        new SidebarItem("Messaging", "file-text", "/messaging"),
                        new SidebarItem("JobScheduling", "cart", "/jobscheduling"),
                        new SidebarItem("Metrics", "people", "/metrics"),
                        new SidebarItem("Logs", "bar-chart", "/logs"),
                    }))
                @await RenderSectionAsync("nav-menu")
                <button class="btn sidebar-toggle d-none d-md-flex" type="button" aria-label="Toggle sidebar">
                    <i class="bi bi-layout-sidebar"></i>
                </button>
            }

            <main class="@(Model.HideSideBar ? "col-12" : "col-md-9 ms-sm-auto col-lg-10") px-md-4">
                <div class="@(!Model.HideSideBar ? "container-fluid px-0" : "")">
                    @await RenderBodyAsync()
                </div>
            </main>
        </div>
    </div>

    <script>
        const themeManager = {
            themes: {
                light: 'light',
                dark: 'dark',
                system: 'system'
            },

            initialize() {
                this.applyTheme(this.getCurrentTheme());
                this.setupSystemThemeListener();
                this.setupToggleButton();
            },

            getSystemTheme() {
                return window.matchMedia('(prefers-color-scheme: dark)').matches ? this.themes.dark : this.themes.light;
            },

            getCurrentTheme() {
                return localStorage.getItem('theme') || this.themes.system;
            },

            applyTheme(theme) {
                const effectiveTheme = theme === this.themes.system ? this.getSystemTheme() : theme;
                document.documentElement.setAttribute('data-bs-theme', effectiveTheme);
                localStorage.setItem('theme', theme);
            },

            setupSystemThemeListener() {
                window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', e => {
                    if (this.getCurrentTheme() === this.themes.system) {
                        this.applyTheme(this.themes.system);
                    }
                });
            },

            setupToggleButton() {
                const toggleButton = document.querySelector('.theme-toggle');
                toggleButton.addEventListener('click', () => {
                    const currentTheme = this.getCurrentTheme();
                    switch (currentTheme) {
                        case this.themes.light:
                            this.applyTheme(this.themes.dark);
                            break;
                        case this.themes.dark:
                            this.applyTheme(this.themes.system);
                            break;
                        default:
                            this.applyTheme(this.themes.light);
                    }
                });
            }
        };

        function setupSidebarToggle() {
            const toggle = document.querySelector('.sidebar-toggle');
            const sidebar = document.querySelector('.sidebar');
            const mainContent = document.querySelector('main');
            const icon = toggle.querySelector('i');

            const isCollapsed = localStorage.getItem('sidebarCollapsed') === 'true';
            if (isCollapsed) {
                sidebar.classList.add('sidebar-collapsed');
                mainContent.classList.add('expanded');
                icon.classList.replace('bi-layout-sidebar', 'bi-layout-sidebar-inset');
            }

            toggle.addEventListener('click', () => {
                sidebar.classList.toggle('sidebar-collapsed');
                mainContent.classList.toggle('expanded');
                const isNowCollapsed = sidebar.classList.contains('sidebar-collapsed');
                localStorage.setItem('sidebarCollapsed', isNowCollapsed);

                if (isNowCollapsed) {
                    icon.classList.replace('bi-layout-sidebar', 'bi-layout-sidebar-inset');
                } else {
                    icon.classList.replace('bi-layout-sidebar-inset', 'bi-layout-sidebar');
                }
            });
        }

        document.addEventListener('DOMContentLoaded', () => {
            themeManager.initialize();
            setupSidebarToggle();
        });
    </script>
</body>
</html>