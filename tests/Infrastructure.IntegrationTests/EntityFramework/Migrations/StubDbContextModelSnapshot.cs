// <auto-generated />
using System;
using BridgingIT.DevKit.Infrastructure.IntegrationTests;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BridgingIT.DevKit.Infrastructure.IntegrationTests.EntityFramework.Migrations
{
    [DbContext(typeof(StubDbContext))]
    partial class StubDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BridgingIT.DevKit.Infrastructure.EntityFramework.OutboxDomainEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContentHash")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("EventId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("ProcessedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("PropertiesJson")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Properties");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("Type");

                    b.ToTable("__Outbox_DomainEvents");
                });

            modelBuilder.Entity("BridgingIT.DevKit.Infrastructure.EntityFramework.OutboxMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContentHash")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MessageId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("ProcessedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("PropertiesJson")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Properties");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.HasKey("Id");

                    b.HasIndex("MessageId");

                    b.HasIndex("Type");

                    b.ToTable("__Outbox_Messages");
                });

            modelBuilder.Entity("BridgingIT.DevKit.Infrastructure.EntityFramework.StorageDocument", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContentHash")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("PartitionKey")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("PropertiesJson")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Properties");

                    b.Property<string>("RowKey")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<DateTimeOffset?>("UpdatedDate")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("PartitionKey");

                    b.HasIndex("RowKey");

                    b.HasIndex("Type");

                    b.ToTable("__Storage_Documents");
                });

            modelBuilder.Entity("BridgingIT.DevKit.Infrastructure.IntegrationTests.PersonStub", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.ToTable("Persons", (string)null);
                });

            modelBuilder.Entity("BridgingIT.DevKit.Infrastructure.IntegrationTests.PersonStub", b =>
                {
                    b.OwnsOne("BridgingIT.DevKit.Infrastructure.IntegrationTests.EmailAddressStub", "Email", b1 =>
                        {
                            b1.Property<Guid>("PersonStubId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.HasKey("PersonStubId");

                            b1.ToTable("Persons");

                            b1.WithOwner()
                                .HasForeignKey("PersonStubId");
                        });

                    b.OwnsMany("BridgingIT.DevKit.Infrastructure.IntegrationTests.LocationStub", "Locations", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("AddressLine1")
                                .IsRequired()
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<string>("AddressLine2")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasMaxLength(128)
                                .HasColumnType("nvarchar(128)");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasMaxLength(128)
                                .HasColumnType("nvarchar(128)");

                            b1.Property<string>("Name")
                                .HasMaxLength(128)
                                .HasColumnType("nvarchar(128)");

                            b1.Property<Guid>("PersonStubId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("PostalCode")
                                .IsRequired()
                                .HasMaxLength(16)
                                .HasColumnType("nvarchar(16)");

                            b1.HasKey("Id");

                            b1.HasIndex("PersonStubId");

                            b1.ToTable("Locations", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("PersonStubId");
                        });

                    b.Navigation("Email");

                    b.Navigation("Locations");
                });
#pragma warning restore 612, 618
        }
    }
}
